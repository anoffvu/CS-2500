#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.0 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 34 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 72
(
 #"((lib \"private/editor.rkt\" \"video\") (lib \"private/editor.rkt\" "
 #"\"video\"))\0"
) 0 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 94 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 119 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 204 204 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 144 179 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 144 179 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 144 179 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 204 221 170 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 144 179 255 0 0 0 -1 -1 2
35 #"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 144 179 255 0 0 0 -1 -1 2
39 #"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 144 179 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 144 179 255 0 0 0 -1 -1 2
42 #"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 178 178 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 204 204 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 144 179 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 204 204 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 204 204 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 204 204 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 119 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 204 204
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 144 179 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 204 221 170
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 178 178 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 163 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 192 203
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 240 230 140
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92 0
0 0 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1           0 5025 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 81
(
 #"#reader(lib \"htdp-intermediate-reader.ss\" \"lang\")((modname PS16)"
 #" (read-case-sensi"
) 0 0 4 3 253
(
 #"tive #t) (teachpacks ((lib \"image.rkt\" \"teachpack\" \"2htdp\") (l"
 #"ib \"universe.rkt\" \"teachpack\" \"2htdp\"))) (htdp-settings #(#t c"
 #"onstructor repeating-decimal #f #t none #f ((lib \"image.rkt\" \"tea"
 #"chpack\" \"2htdp\") (lib \"universe.rkt\" \"teachpack\" \"2htdp\")) "
 #"#f)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 16 #"; Problem Set 16"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 10 #"neu-fall18"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/batch-io"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"song"
0 0 24 3 2 #" ["
0 0 14 3 5 #"title"
0 0 24 3 1 #" "
0 0 14 3 6 #"artist"
0 0 24 3 1 #" "
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 5 #"album"
0 0 24 3 1 #" "
0 0 14 3 10 #"bytestring"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 60
#"; a Song is a (make-song String String Number String String)"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; Interpretation: represents the data of a song"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; - title is the title of the song"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; - artist is the song's artist"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; - length is the song's length in seconds"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; - album is the song's album"
0 0 24 29 1 #"\n"
0 0 17 3 54 #"; - bytestring is the actual bytes of data of the song"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; - id is the id of the song given from the server"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"SONG-1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"BankAccount\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Savage\""
0 0 24 3 1 #" "
0 0 21 3 3 #"155"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"issa\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"xxx\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2929"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"SONG-2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"BetterNow\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Posty\""
0 0 24 3 1 #" "
0 0 21 3 3 #"201"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"bandb\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"yyy\""
0 0 24 3 1 #" "
0 0 21 3 4 #"8573"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"SONG-3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"8teen\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Khalid\""
0 0 24 3 1 #" "
0 0 21 3 3 #"255"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"American Teen\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"zzz\""
0 0 24 3 1 #" "
0 0 21 3 4 #"7163"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"SONG-4"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"ice\""
0 0 24 3 1 #" "
0 0 21 3 3 #"213"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"idk\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"zzz\""
0 0 24 3 1 #" "
0 0 21 3 4 #"9999"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Template:"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; song-temp : Song -> ?"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"song-temp"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 10 #"song-title"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 11 #"song-artist"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 11 #"song-length"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 10 #"song-album"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 15 #"song-bytestring"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 7 #"song-id"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 11 #"songhistory"
0 0 24 3 2 #" ["
0 0 14 3 4 #"song"
0 0 24 3 1 #" "
0 0 14 3 11 #"timesplayed"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; A SongHistory is a (make-songhistory Song Number)"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #"; Interpretation : the data of a song and the number of times it has"
 #" been played"
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #"; where song is the song that was just played"
0 0 24 29 1 #"\n"
0 0 17 3 65
#"; and timesplayed is the number of times the song has been played"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"SONGHISTORY-1"
0 0 24 3 2 #" ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 1 #" "
0 0 14 3 6 #"SONG-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"SONGHISTORY-2"
0 0 24 3 2 #" ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 1 #" "
0 0 14 3 6 #"SONG-2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"SONGHISTORY-3"
0 0 24 3 2 #" ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 1 #" "
0 0 14 3 6 #"SONG-3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Template:"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"songhistory-temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 9 #"song-temp"
0 0 24 3 2 #" ("
0 0 14 3 16 #"songhistory-song"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 23 #"songhistory-timesplayed"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; A History is a [List-of SongHistory]"
0 0 24 29 1 #"\n"
0 0 17 3 86
(
 #"; Interpretation : a history of all the songs and the number of time"
 #"s they were played"
) 0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-0"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 13 #"SONGHISTORY-1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 13 #"SONGHISTORY-1"
0 0 24 3 1 #" "
0 0 14 3 13 #"SONGHISTORY-2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 13 #"SONGHISTORY-1"
0 0 24 3 1 #" "
0 0 14 3 13 #"SONGHISTORY-2"
0 0 24 3 1 #" "
0 0 14 3 13 #"SONGHISTORY-3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Template:"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"history-temp"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 16 #"songhistory-temp"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 12 #"history-temp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; A FeedbackString is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 6 #"; - \"\""
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; - \"dislike\""
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; - \"like\""
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; - \"none\""
0 0 24 29 1 #"\n"
0 0 17 3 86
(
 #"; Interpretation: The feedback that the user gave to the last song p"
 #"layed.  The string"
) 0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #"; \"none\" represents that the user gave no feedback, and the string"
 #" \"\" represents"
) 0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #"; that no feedback has been received yet (i.e., we are playing the f"
 #"irst song)."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"FEEDBACKSTRING-EMPTY"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 22 #"FEEDBACKSTRING-DISLIKE"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"dislike\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"FEEDBACKSTRING-LIKE"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"like\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"FEEDBACKSTRING-NONE"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"none\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Template:"
0 0 24 29 1 #"\n"
0 0 17 3 43 #"; feedbackstring-temp : FeedbackString -> ?"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"feedbackstring-temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"fs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"fs"
0 0 24 3 1 #" "
0 0 14 3 20 #"FEEDBACKSTRING-EMPTY"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"fs"
0 0 24 3 1 #" "
0 0 14 3 22 #"FEEDBACKSTRING-DISLIKE"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"fs"
0 0 24 3 1 #" "
0 0 14 3 19 #"FEEDBACKSTRING-LIKE"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"fs"
0 0 24 3 1 #" "
0 0 14 3 19 #"FEEDBACKSTRING-NONE"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52 #"; A Metadata is a (list String String Number String)"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; Interpretation: the data pertaining to a song"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; - where the first String is the song's title"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; - the second String is the song's artist"
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; - the Number is the length of the song (in seconds)"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; - and the third String is the song's album"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"METADATA-1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"BankAccount\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Savage\""
0 0 24 3 1 #" "
0 0 21 3 3 #"155"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"issa\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"METADATA-2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"BetterNow\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Posty\""
0 0 24 3 1 #" "
0 0 21 3 3 #"201"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"bandb\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"METADATA-3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"ice\""
0 0 24 3 1 #" "
0 0 21 3 3 #"213"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"idk\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Template:"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; metadata-temp: Metadata -> ?"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"metadata-temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"md"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 2 #"md"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 2 #"md"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 2 #"md"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"md"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"md"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 6 #"fourth"
0 0 24 3 1 #" "
0 0 14 3 2 #"md"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; An ErrorMsg is a (list \"ERROR\" String)"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #"; where the second string is the message from the server about what "
 #"went wrong"
) 0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ERRORMSG-1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"ERROR\""
0 0 24 3 1 #" "
0 0 19 3 17 #"\"server too busy\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ERRORMSG-2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"ERROR\""
0 0 24 3 1 #" "
0 0 19 3 24 #"\"a song cannot be found\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; A SongMsg is a (list \"SONG\" Nat Metadata String)"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; - where the Nat is the song's unique ID#"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; - the Metadata is information about the song"
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; - and the String is the actual byte-string of music"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #"; Interpretation: The given song from the server, including its ID#,"
 #" Metadata bytes"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"SONGMSG-1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"SONG\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2929"
0 0 24 3 1 #" "
0 0 14 3 10 #"METADATA-1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"xxx\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"SONGMSG-2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"SONG\""
0 0 24 3 1 #" "
0 0 21 3 4 #"8573"
0 0 24 3 1 #" "
0 0 14 3 10 #"METADATA-2"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"yyy\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"SONGMSG-3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"SONG\""
0 0 24 3 1 #" "
0 0 21 3 4 #"9999"
0 0 24 3 1 #" "
0 0 14 3 10 #"METADATA-3"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"zzz\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; A IDMetaPair is a (list Nat Metadata)"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; - where the nat is the id of the song"
0 0 24 29 1 #"\n"
0 0 17 3 61
#"; - and the metadata contains all of the metadata of the song"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"IDMETAPAIR-1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 4 #"2929"
0 0 24 3 1 #" "
0 0 14 3 10 #"METADATA-1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"IDMETAPAIR-2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 4 #"8573"
0 0 24 3 1 #" "
0 0 14 3 10 #"METADATA-2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"IDMETAPAIR-3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 4 #"9999"
0 0 24 3 1 #" "
0 0 14 3 10 #"METADATA-3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Template:"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; idmetapair-temp : IDMetaPair -> ?"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"idmetapair-temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"idmp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"idmp"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"idmp"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"idmp"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 13 #"metadata-temp"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 4 #"idmp"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#"; A MetadataMsg is a (list \"METADATA\" [List-of IDMetaPair])"
0 0 24 29 1 #"\n"
0 0 17 3 90
(
 #"; where the list contains all of the metadata and ids of the songs a"
 #"vailable on the server"
) 0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"METADATAMSG-0"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"METADATA\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 4 #" )))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"METADATAMSG-1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"METADATA\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 12 #"IDMETAPAIR-1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"METADATAMSG-2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"METADATA\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 12 #"IDMETAPAIR-1"
0 0 24 3 1 #" "
0 0 14 3 12 #"IDMETAPAIR-2"
0 0 24 3 1 #" "
0 0 14 3 12 #"IDMETAPAIR-3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Template:"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; metadatamsg-temp : MetaDataMsg -> ?"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"metadatamsg-temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"mdm"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"mdm"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"mdm"
0 0 24 3 3 #") ("
0 0 14 3 15 #"idmetapair-temp"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 3 #"mdm"
0 0 24 3 4 #"))) "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 15 #"idmetapair-temp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 3 #"mdm"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; A ServerMsg is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; - ErrorMsg"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; - SongMsg"
0 0 24 29 1 #"\n"
0 0 17 3 15 #"; - MetadataMsg"
0 0 24 29 1 #"\n"
0 0 17 3 55 #"; Interpretation: the response received from the server"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"SERVERMSG-1"
0 0 24 3 1 #" "
0 0 14 3 10 #"ERRORMSG-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"SERVERMSG-2"
0 0 24 3 1 #" "
0 0 14 3 10 #"ERRORMSG-2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"SERVERMSG-3"
0 0 24 3 1 #" "
0 0 14 3 9 #"SONGMSG-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"SERVERMSG-4"
0 0 24 3 1 #" "
0 0 14 3 9 #"SONGMSG-2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"SERVERMSG-5"
0 0 24 3 1 #" "
0 0 14 3 13 #"METADATAMSG-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"SERVERMSG-6"
0 0 24 3 1 #" "
0 0 14 3 13 #"METADATAMSG-2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Template"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; servermsg-temp: ServerMsg -> ?"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"servermsg-temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"sm"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 2 #"sm"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"ERROR\""
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 2 #"sm"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"SONG\""
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 2 #"sm"
0 0 24 3 2 #") "
0 0 19 3 10 #"\"METADATA\""
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 16 #"metadatamsg-temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"sm"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; a MusicPlayerState is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; - #false"
0 0 24 29 1 #"\n"
0 0 17 3 98
(
 #";   - represents that the program has started and has not yet receiv"
 #"ed the MetaDataMsg from server"
) 0 0 24 29 1 #"\n"
0 0 17 3 5 #"; - 1"
0 0 24 29 1 #"\n"
0 0 17 3 96
(
 #";   - when the MetaDataMsg has been received from the server and the"
 #" user needs to choose a song"
) 0 0 24 29 1 #"\n"
0 0 17 3 15 #"; - \"requested\""
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";   - when a song has been requested from the server but not yet rec"
 #"eived"
) 0 0 24 29 1 #"\n"
0 0 17 3 51 #"; - (make-song String String Number String String) "
0 0 24 29 1 #"\n"
0 0 17 3 61
#";   - when a requested song has been received from the server"
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; Interpretation: the current state of a music player"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"MPSTATE-1"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"MPSTATE-2"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"requested\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"MPSTATE-3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"yo\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"yo\""
0 0 24 3 1 #" "
0 0 21 3 3 #"222"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"oo\""
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"MPSTATE-4"
0 0 24 3 1 #" "
0 0 14 3 6 #"SONG-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"MPSTATE-5"
0 0 24 3 1 #" "
0 0 14 3 6 #"SONG-2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"MPSTATE-7"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"MPSTATE-8"
0 0 24 3 1 #" "
0 0 14 3 6 #"SONG-4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Template:"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; mpstate-temp: MusicPlayerState -> ?"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mpstate-temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"mps"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 3 #"mps"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 3 #"mps"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"string?"
0 0 24 3 1 #" "
0 0 14 3 3 #"mps"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"song?"
0 0 24 3 1 #" "
0 0 14 3 3 #"mps"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 9 #"song-temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"mps"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 4 #"])) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 2 #" ["
0 0 14 3 7 #"mpstate"
0 0 24 3 1 #" "
0 0 14 3 7 #"history"
0 0 24 3 1 #" "
0 0 14 3 8 #"feedback"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 92
(
 #"; A MusicPlayer is a (make-player MusicPlayerState [List-of SongHist"
 #"ory] FeedbackString Nat)"
) 0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #"; Interpretation: A music player with a current state and a feedback"
 #" "
) 0 0 24 29 1 #"\n"
0 0 17 3 58
#"; - where mpstate is the current state of the music player"
0 0 24 29 1 #"\n"
0 0 17 3 55 #"; - history is the list of song histories of the player"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #"; - feedback is the feedback received from the user for the last son"
 #"g played"
) 0 0 24 29 1 #"\n"
0 0 17 3 99
(
 #"; - and index represents the current highlighted choice of a song wh"
 #"en the user is making a request"
) 0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-1"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 9 #"MPSTATE-1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 3 #" ) "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 9 #"MPSTATE-2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 3 #" ) "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-3"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 9 #"MPSTATE-3"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-1"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-4"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 9 #"MPSTATE-4"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-1"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"dislike\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-5"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 9 #"MPSTATE-5"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-3"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"like\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";(define MUSICPLAYER-6 (make-player MPSTATE-6 HISTORY-3 \"like\" 0))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-7"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 9 #"MPSTATE-7"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-3"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-8"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 9 #"MPSTATE-7"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-3"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-9"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 9 #"MPSTATE-7"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-3"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"MUSICPLAYER-10"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 9 #"MPSTATE-7"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-3"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"MUSICPLAYER-11"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 9 #"MPSTATE-7"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-3"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"MUSICPLAYER-12"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 9 #"MPSTATE-7"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-3"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Template:"
0 0 24 29 1 #"\n"
0 0 17 3 36 #"; musicplayer-temp: MusicPlayer -> ?"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"musicplayer-temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 12 #"mpstate-temp"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-mpstate"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 12 #"history-temp"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-history"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 13 #"feedback-temp"
0 0 24 3 2 #" ("
0 0 14 3 15 #"player-feedback"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 12 #"player-index"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; A PlayerResult is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 15 #"; - MusicPlayer"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; - Package"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; A ClientMsg is a Nat"
0 0 24 29 1 #"\n"
0 0 17 3 58
#"; representing a request for a SongMsg with a specific ID#"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"CLIENTMSG-1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"2929\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"CLIENTMSG-2"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"8573\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; A Package is a (make-package MusicPlayer ClientMsg)"
0 0 24 29 1 #"\n"
0 0 17 3 55 #"; - and dictacts the next state of the world as well as"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; - the message sent from the client to the server"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"PACKAGE-1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-package"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-1"
0 0 24 3 1 #" "
0 0 14 3 11 #"CLIENTMSG-1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"PACKAGE-2"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-package"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-2"
0 0 24 3 1 #" "
0 0 14 3 11 #"CLIENTMSG-2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; Exercise 3"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"FILEPATH"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"history.csv\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; main/player : Any -> String"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; world program; World is a Musicplayer"
0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #"; runs a music player that allows the user to choose songs to play f"
 #"rom the server and displays"
) 0 0 24 29 1 #"\n"
0 0 17 3 98
(
 #"; the user feedback from the last song played, the song's title, art"
 #"ist, and album, and the number"
) 0 0 24 29 1 #"\n"
0 0 17 3 42 #"; of times played next to each song choice"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"main/player"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"save-history"
0 0 24 3 1 #" "
0 0 14 3 8 #"FILEPATH"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 14 #"player-history"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 14 #"INITIAL-PLAYER"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 8 #"register"
0 0 24 3 1 #" "
0 0 19 3 24 #"\"dictionary.ccs.neu.edu\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 4 #"port"
0 0 24 3 1 #" "
0 0 21 3 5 #"10001"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 11 #"draw-player"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 10 #"handle-key"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 10 #"on-receive"
0 0 24 3 1 #" "
0 0 14 3 11 #"receive-msg"
0 0 24 3 7 #"]))))  "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; format-csv-data : [List-of String] -> SongHistory"
0 0 24 29 1 #"\n"
0 0 17 3 55 #"; transforms the CSV list of strings into a SongHistory"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"format-csv-data"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"10\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"title1\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"300\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"title1\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 3 #"300"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"format-csv-data"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"1000\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"0000\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 2 #") "
0 0 21 3 4 #"0000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"format-csv-data"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"string->number"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 5 #"))) ("
0 0 14 3 14 #"string->number"
0 0 24 29 1 #"\n"
0 0 24 3 87
(
 #"                                                                    "
 #"                  ("
) 0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; read-history : String -> History"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; reads a CSV and creates a History out of it"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"read-history"
0 0 24 3 1 #" "
0 0 14 3 5 #"fpath"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 15 #"format-csv-data"
0 0 24 3 2 #" ("
0 0 14 3 13 #"read-csv-file"
0 0 24 3 1 #" "
0 0 14 3 5 #"fpath"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #"; read-file-if-exists : String -> History"
0 0 24 29 1 #"\n"
0 0 17 3 58
#"; reads a CSV and creates a History out of it if it exists"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"read-file-if-exists"
0 0 24 3 1 #" "
0 0 19 3 35 #"\"this file should not exist please\""
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"read-file-if-exists"
0 0 24 3 1 #" "
0 0 14 3 5 #"fpath"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 12 #"file-exists?"
0 0 24 3 1 #" "
0 0 14 3 5 #"fpath"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"read-history"
0 0 24 3 1 #" "
0 0 14 3 5 #"fpath"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"INITIAL-PLAYER"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 9 #"MPSTATE-1"
0 0 24 3 2 #" ("
0 0 14 3 19 #"read-file-if-exists"
0 0 24 3 1 #" "
0 0 14 3 8 #"FILEPATH"
0 0 24 3 2 #") "
0 0 14 3 20 #"FEEDBACKSTRING-EMPTY"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; handle-key: MusicPlayer KeyEvent -> PlayerResult"
0 0 24 29 1 #"\n"
0 0 17 3 68
#"; Updates the state of the MusicPlayer after certain KeyEvents occur"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"handle-key"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-7"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 3 2 #") "
0 0 14 3 13 #"MUSICPLAYER-9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"handle-key"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-7"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 2 #") "
0 0 14 3 13 #"MUSICPLAYER-8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"handle-key"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-7"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\r\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"handle-songmenu"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-7"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\r\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"handle-key"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-8"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\r\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"handle-songmenu"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-8"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\r\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"handle-key"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-7"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"k\""
0 0 24 3 2 #") "
0 0 14 3 13 #"MUSICPLAYER-7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"handle-key"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-2"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 2 #") "
0 0 14 3 13 #"MUSICPLAYER-2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"handle-key"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-3"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"q\""
0 0 24 3 2 #") "
0 0 14 3 13 #"MUSICPLAYER-3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"handle-key"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-mpstate"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"boolean?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-mpstate"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 15 #"handle-songmenu"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"song?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-mpstate"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"handle-space"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 55 #"; handle-songmenu : MusicPlayer KeyEvent -> MusicPlayer"
0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #"; allows user to move up/down to choose songs, and enter to request "
 #"that song from the server,"
) 0 0 24 29 1 #"\n"
0 0 17 3 43 #"; by modifying the index of the musicplayer"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"handle-songmenu"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-7"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 3 2 #") "
0 0 14 3 13 #"MUSICPLAYER-9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"handle-songmenu"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-7"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 2 #") "
0 0 14 3 13 #"MUSICPLAYER-8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"handle-songmenu"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-7"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\r\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"make-package"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"make-player"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 19 3 11 #"\"requested\""
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"BankAccount\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Savage\""
0 0 24 3 1 #" "
0 0 21 3 3 #"155"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"issa\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"xxx\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2929"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"BetterNow\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Posty\""
0 0 24 3 1 #" "
0 0 21 3 3 #"201"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"bandb\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"yyy\""
0 0 24 3 1 #" "
0 0 21 3 4 #"8573"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"8teen\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Khalid\""
0 0 24 3 1 #" "
0 0 21 3 3 #"255"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"American Teen\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"zzz\""
0 0 24 3 1 #" "
0 0 21 3 4 #"7163"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 19 3 2 #"\"\""
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 4 #"2929"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"handle-songmenu"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-8"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\r\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"make-package"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"make-player"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 19 3 11 #"\"requested\""
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"BankAccount\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Savage\""
0 0 24 3 1 #" "
0 0 21 3 3 #"155"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"issa\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"xxx\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2929"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"BetterNow\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Posty\""
0 0 24 3 1 #" "
0 0 21 3 3 #"201"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"bandb\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"yyy\""
0 0 24 3 1 #" "
0 0 21 3 4 #"8573"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"8teen\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Khalid\""
0 0 24 3 1 #" "
0 0 21 3 3 #"255"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"American Teen\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"zzz\""
0 0 24 3 1 #" "
0 0 21 3 4 #"7163"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 19 3 2 #"\"\""
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 4 #"8573"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"handle-songmenu"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-7"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 24 3 2 #") "
0 0 14 3 13 #"MUSICPLAYER-7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"handle-songmenu"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 3 3 #") ("
0 0 14 3 12 #"handle-upkey"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 3 #") ("
0 0 14 3 14 #"handle-downkey"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\r\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"handle-enterkey"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #"; handle-upkey : MusicPlayer -> MusicPlayer"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #"; updates the index of the MusicPlayer after the \"up\" arrow is pre"
 #"ssed"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"handle-upkey"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-7"
0 0 24 3 2 #") "
0 0 14 3 13 #"MUSICPLAYER-9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"handle-upkey"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"make-player"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-mpstate"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 14 #"player-history"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 15 #"player-feedback"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"modulo"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"player-index"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-history"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; handle-downkey : MusicPlayer -> Musicplayer"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #"; updates the index of the MusicPlayer after the \"down\" arrow is p"
 #"ressed"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"handle-downkey"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-7"
0 0 24 3 2 #") "
0 0 14 3 13 #"MUSICPLAYER-8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"handle-downkey"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-8"
0 0 24 3 2 #") "
0 0 14 3 13 #"MUSICPLAYER-9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"handle-downkey"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"make-player"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-mpstate"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 14 #"player-history"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 15 #"player-feedback"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"modulo"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"player-index"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-history"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; handle-enterkey : MusicPlayer -> PlayerResult"
0 0 24 29 1 #"\n"
0 0 17 3 91
(
 #"; sends a request to the server with the specific song id from the s"
 #"ong chosen by the user "
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"handle-enterkey"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"make-package"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"make-player"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 19 3 11 #"\"requested\""
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"BankAccount\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Savage\""
0 0 24 3 1 #" "
0 0 21 3 3 #"155"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"issa\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"xxx\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2929"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"BetterNow\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Posty\""
0 0 24 3 1 #" "
0 0 21 3 3 #"201"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"bandb\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"yyy\""
0 0 24 3 1 #" "
0 0 21 3 4 #"8573"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"8teen\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Khalid\""
0 0 24 3 1 #" "
0 0 21 3 3 #"255"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"American Teen\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"zzz\""
0 0 24 3 1 #" "
0 0 21 3 4 #"7163"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 19 3 2 #"\"\""
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 4 #"2929"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"handle-enterkey"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"make-package"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"make-player"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 19 3 11 #"\"requested\""
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"BankAccount\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Savage\""
0 0 24 3 1 #" "
0 0 21 3 3 #"155"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"issa\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"xxx\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2929"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"BetterNow\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Posty\""
0 0 24 3 1 #" "
0 0 21 3 3 #"201"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"bandb\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"yyy\""
0 0 24 3 1 #" "
0 0 21 3 4 #"8573"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"8teen\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Khalid\""
0 0 24 3 1 #" "
0 0 21 3 3 #"255"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"American Teen\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"zzz\""
0 0 24 3 1 #" "
0 0 21 3 4 #"7163"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 19 3 2 #"\"\""
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 4 #"8573"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"handle-enterkey"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-package"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"requested\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-history"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #") ("
0 0 14 3 15 #"player-feedback"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #") ("
0 0 14 3 12 #"player-index"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"song-id"
0 0 24 3 2 #" ("
0 0 14 3 16 #"songhistory-song"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-history"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #") ("
0 0 14 3 12 #"player-index"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; receive-msg : MusicPlayer ServerMsg -> PlayerResult"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #"; updates the state of the player after receiving a message from the"
 #" server"
) 0 0 24 29 1 #"\n"
0 0 17 3 92
(
 #"; if it receives an error, then it makes another request to the serv"
 #"er with the same song id"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"receive-msg"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-3"
0 0 24 3 1 #" "
0 0 14 3 11 #"SERVERMSG-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"make-package"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"make-player"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"yo\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"yo\""
0 0 24 3 1 #" "
0 0 21 3 3 #"222"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"oo\""
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 16 #"make-songhistory"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"BankAccount\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Savage\""
0 0 24 3 1 #" "
0 0 21 3 3 #"155"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"issa\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"xxx\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2929"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 2 #"12"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"receive-msg"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-1"
0 0 24 3 1 #" "
0 0 14 3 11 #"SERVERMSG-3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"make-player"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"BankAccount\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Savage\""
0 0 24 3 1 #" "
0 0 21 3 3 #"155"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"issa\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"xxx\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2929"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"receive-msg"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-1"
0 0 24 3 1 #" "
0 0 14 3 11 #"SERVERMSG-6"
0 0 24 3 12 #")           "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"make-player"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"BankAccount\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Savage\""
0 0 24 3 1 #" "
0 0 21 3 3 #"155"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"issa\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2929"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"BetterNow\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Posty\""
0 0 24 3 1 #" "
0 0 21 3 3 #"201"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"bandb\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 4 #"8573"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"ice\""
0 0 24 3 1 #" "
0 0 21 3 3 #"213"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"idk\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 4 #"9999"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 19 3 2 #"\"\""
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"receive-msg"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #" "
0 0 14 3 2 #"sm"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 2 #"sm"
0 0 24 3 2 #") "
0 0 19 3 10 #"\"METADATA\""
0 0 24 3 3 #") ("
0 0 14 3 18 #"input-list-choices"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sm"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 2 #"sm"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"ERROR\""
0 0 24 3 3 #") ("
0 0 14 3 12 #"make-package"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 2 #" ("
0 0 14 3 7 #"song-id"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-mpstate"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 2 #"sm"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"SONG\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"make-player"
0 0 24 3 2 #" ("
0 0 14 3 15 #"convert-to-song"
0 0 24 3 1 #" "
0 0 14 3 2 #"sm"
0 0 24 3 3 #") ("
0 0 14 3 14 #"player-history"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #") ("
0 0 14 3 15 #"player-feedback"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #") ("
0 0 14 3 12 #"player-index"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #"; input-list-choices : MusicPlayer [List-of IDMetaPair] -> MusicPlay"
 #"er"
) 0 0 24 29 1 #"\n"
0 0 17 3 98
(
 #"; converts the metadatamsg into the song choices (history), and plac"
 #"es this into a new musicplayer"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"input-list-choices"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 12 #"IDMETAPAIR-1"
0 0 24 3 1 #" "
0 0 14 3 12 #"IDMETAPAIR-2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 16 #"make-songhistory"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"BankAccount\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Savage\""
0 0 24 3 1 #" "
0 0 21 3 3 #"155"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"issa\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2929"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 16 #"make-songhistory"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"BetterNow\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Posty\""
0 0 24 3 1 #" "
0 0 21 3 3 #"201"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"bandb\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 4 #"8573"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"input-list-choices"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-7"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 12 #"IDMETAPAIR-1"
0 0 24 3 1 #" "
0 0 14 3 12 #"IDMETAPAIR-2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"make-player"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"BankAccount\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Savage\""
0 0 24 3 1 #" "
0 0 21 3 3 #"155"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"issa\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"xxx\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2929"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"BetterNow\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Posty\""
0 0 24 3 1 #" "
0 0 21 3 3 #"201"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"bandb\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"yyy\""
0 0 24 3 1 #" "
0 0 21 3 4 #"8573"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"8teen\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Khalid\""
0 0 24 3 1 #" "
0 0 21 3 3 #"255"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"American Teen\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"zzz\""
0 0 24 3 1 #" "
0 0 21 3 4 #"7163"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 19 3 2 #"\"\""
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"input-list-choices"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #" "
0 0 14 3 6 #"loidmp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-history"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-to-choices"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #" "
0 0 14 3 6 #"loidmp"
0 0 24 3 3 #") ("
0 0 14 3 15 #"player-feedback"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #") ("
0 0 14 3 12 #"player-index"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-history"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #") ("
0 0 14 3 15 #"player-feedback"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #") ("
0 0 14 3 12 #"player-index"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 66
#"; convert-to-choices : MusicPlayer [List-of IDMetaPair] -> History"
0 0 24 29 1 #"\n"
0 0 17 3 58
#"; converts the metadatamsg into the song choices (history)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-to-choices"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 12 #"IDMETAPAIR-1"
0 0 24 3 1 #" "
0 0 14 3 12 #"IDMETAPAIR-2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"BankAccount\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Savage\""
0 0 24 3 1 #" "
0 0 21 3 3 #"155"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"issa\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2929"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"BetterNow\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Posty\""
0 0 24 3 1 #" "
0 0 21 3 3 #"201"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"bandb\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 4 #"8573"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-to-choices"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-7"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 12 #"IDMETAPAIR-1"
0 0 24 3 1 #" "
0 0 14 3 12 #"IDMETAPAIR-2"
0 0 24 3 1 #" "
0 0 14 3 12 #"IDMETAPAIR-3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"BankAccount\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Savage\""
0 0 24 3 1 #" "
0 0 21 3 3 #"155"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"issa\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2929"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"BetterNow\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Posty\""
0 0 24 3 1 #" "
0 0 21 3 3 #"201"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"bandb\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 4 #"8573"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"hello\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"ice\""
0 0 24 3 1 #" "
0 0 21 3 3 #"213"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"idk\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 4 #"9999"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-to-choices"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #" "
0 0 14 3 6 #"loidmp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 2 #" ["
0 0 17 3 42 #"; convert-idmp : IDMetaPair -> SongHistory"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 26 #"; converts an IDMP to a SH"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"convert-idmp"
0 0 24 3 1 #" "
0 0 14 3 4 #"idmp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-song"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 4 #"idmp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 6 #"second"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 4 #"idmp"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 5 #"third"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 4 #"idmp"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 6 #"fourth"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 4 #"idmp"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                         "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 17 3 28 #"; placeholder for bytestring"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"idmp"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 12 #"convert-idmp"
0 0 24 3 1 #" "
0 0 14 3 6 #"loidmp"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; convert-to-song ; SongMsg -> Song"
0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #"; extracts metadata and bytestring from a SongMsg and converts this "
 #"data to a Song struct"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"convert-to-song"
0 0 24 3 1 #" "
0 0 14 3 9 #"SONGMSG-1"
0 0 24 3 2 #") "
0 0 14 3 6 #"SONG-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"convert-to-song"
0 0 24 3 1 #" "
0 0 14 3 9 #"SONGMSG-2"
0 0 24 3 2 #") "
0 0 14 3 6 #"SONG-2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"convert-to-song"
0 0 24 3 1 #" "
0 0 14 3 2 #"sm"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-song"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sm"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"second"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sm"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 5 #"third"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sm"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"fourth"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sm"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"fourth"
0 0 24 3 1 #" "
0 0 14 3 2 #"sm"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sm"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52 #"; handle-space : MusicPlayer KeyEvent -> MusicPlayer"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #"; plays the received song and awaits the feedback when the user pres"
 #"ses the space bar"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"handle-space"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-3"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"k\""
0 0 24 3 2 #") "
0 0 14 3 13 #"MUSICPLAYER-3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"handle-space"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-4"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"p\""
0 0 24 3 2 #") "
0 0 14 3 13 #"MUSICPLAYER-4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"handle-space"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-2"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 2 #") "
0 0 14 3 13 #"MUSICPLAYER-2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #"; no further check-expects are possible because play-sound calls big"
 #"-bang "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"handle-space"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 3 #") ("
0 0 14 3 27 #"handle-feedback-and-history"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 58
#"; handle-feedback-and-history : MusicPlayer -> MusicPlayer"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #"; replaces the prior feedback in the MusicPlayer with the new feedba"
 #"ck, "
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #"; updates the History, and sets the MusicPlayer back to its inital s"
 #"tate"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 61
#"; no check expects possible because play-sound calls big-bang"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 27 #"handle-feedback-and-history"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 2 #" ("
0 0 14 3 15 #"history-updater"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-mpstate"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #") ("
0 0 14 3 14 #"player-history"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"play-sound"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 15 #"song-bytestring"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-mpstate"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 5 #"))) ("
0 0 14 3 12 #"player-index"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #"; history-updater : Song History -> History"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; updates the history after a song has been played"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"history-updater"
0 0 24 3 1 #" "
0 0 14 3 6 #"SONG-1"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-0"
0 0 24 3 2 #") "
0 0 14 3 9 #"HISTORY-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"history-updater"
0 0 24 3 1 #" "
0 0 14 3 6 #"SONG-1"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 1 #" "
0 0 14 3 6 #"SONG-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"history-updater"
0 0 24 3 1 #" "
0 0 14 3 6 #"SONG-2"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 13 #"SONGHISTORY-1"
0 0 24 3 2 #" ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 1 #" "
0 0 14 3 6 #"SONG-2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"history-updater"
0 0 24 3 1 #" "
0 0 14 3 4 #"song"
0 0 24 3 1 #" "
0 0 14 3 7 #"history"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 2 #" ["
0 0 17 3 45 #"; history-contains? : Song History -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 71
(
 #"; determines if the given song appears in any song history in a Hist"
 #"ory"
) 0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 43 #"; given SONG-1 and HISTORY-0, return #false"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 42 #"; given SONG-1 and HISTORY-1, return #true"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 42 #"; given SONG-2 and HISTORY-2, return #true"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 43 #"; given SONG-1 and HISTORY-1, return #false"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"history-contains?"
0 0 24 3 1 #" "
0 0 14 3 4 #"song"
0 0 24 3 1 #" "
0 0 14 3 13 #"history-other"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 5 #"local"
0 0 24 3 2 #" ["
0 0 17 3 42 #";song-in-history? : SongHistory -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 46 #"; is the given song in a certain SongHistory? "
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 50 #"; if SONG-1, and given SONGHISTORY-1, return #true"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 51 #"; if SONG-3, and given SONGHISTORY-3, return #false"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"song-in-history?"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"song-id"
0 0 24 3 1 #" "
0 0 14 3 4 #"song"
0 0 24 3 3 #") ("
0 0 14 3 7 #"song-id"
0 0 24 3 2 #" ("
0 0 14 3 16 #"songhistory-song"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 5 #"ormap"
0 0 24 3 1 #" "
0 0 14 3 16 #"song-in-history?"
0 0 24 3 1 #" "
0 0 14 3 13 #"history-other"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 17 #"history-contains?"
0 0 24 3 1 #" "
0 0 14 3 4 #"song"
0 0 24 3 1 #" "
0 0 14 3 7 #"history"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 21 #"increment-songhistory"
0 0 24 3 1 #" "
0 0 14 3 4 #"song"
0 0 24 3 1 #" "
0 0 14 3 7 #"history"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 1 #" "
0 0 14 3 4 #"song"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 7 #"history"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; increment-songhistory : Song History -> History "
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #"; Increments the count of the timesplayed in a SongHistory by 1 afte"
 #"r a certain song has been played"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"increment-songhistory"
0 0 24 3 1 #" "
0 0 14 3 6 #"SONG-1"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 1 #" "
0 0 14 3 6 #"SONG-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"increment-songhistory"
0 0 24 3 1 #" "
0 0 14 3 6 #"SONG-2"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 13 #"SONGHISTORY-1"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                             ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 1 #" "
0 0 14 3 6 #"SONG-2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"increment-songhistory"
0 0 24 3 1 #" "
0 0 14 3 4 #"song"
0 0 24 3 1 #" "
0 0 14 3 7 #"history"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 2 #" ["
0 0 17 3 46 #"; increment-songhist? : SongHistory -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 64
#"; should timesplayed in a given SongHistory be incremented by 1?"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 61
#"; if SONG-1 is used, and SONGHISTORY-1 is given, return #true"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 62
#"; if SONG-3 is used, and SONGHISTORY-2 is given, return #false"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"increment-songhist?"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"song-id"
0 0 24 3 1 #" "
0 0 14 3 4 #"song"
0 0 24 3 3 #") ("
0 0 14 3 7 #"song-id"
0 0 24 3 2 #" ("
0 0 14 3 16 #"songhistory-song"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 52 #"; increment-timesplayed : SongHistory -> SongHistory"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 90
(
 #"; increments the timesplayed of a given SongHistory by 1 if incremen"
 #"t-songhist? returns #t"
) 0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 60
#"; SONGHISTORY-1 is given, return (make-songhistory SONG-1 2)"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 60
#"; SONGHISTORY-2 is given, return (make-songhistory SONG-2 3)"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 60
#"; SONGHISTORY-3 is given, return (make-songhistory SONG-3 4)"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"increment-timesplayed"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 19 #"increment-songhist?"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 16 #"make-songhistory"
0 0 24 3 1 #" "
0 0 14 3 4 #"song"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 2 #" ("
0 0 14 3 23 #"songhistory-timesplayed"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 2 #"sh"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 21 #"increment-timesplayed"
0 0 24 3 1 #" "
0 0 14 3 7 #"history"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; Image Constants"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 21 3 3 #"600"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 22 #"TEXT-COLOR-HIGHLIGHTED"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"INSTRUCTIONS"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Press"
0 0 19 3 1 #" "
0 0 19 3 5 #"space"
0 0 19 3 18 #" to play the song\""
0 0 24 3 1 #" "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 2 #") "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #"; draw-player : MusicPlayer -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #"; displays instructions on how to play a song and renders the feedba"
 #"ck from the user,"
) 0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #"; the upcoming song's title, artist, album, along with the history o"
 #"f songs played, w/ # timesplayed"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-player"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-1"
0 0 24 3 2 #") "
0 6           4 21 6729
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 300.0 142.5 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:translate 0.0 7.5 #(struct:text \"\" 0 1 \"orange\" 15 #f swiss no"
 #"rmal normal #f))) #(struct:translate 0.0 15.0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 0 0 0 0)) 255 \"black\"))))) #(struct:translate 0 0 #("
 #"struct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:poin"
 #"t 600 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 0"
 #" 0 0) #(struct:pulled-point 0 0 600 300 0 0) #(struct:pulled-point 0"
 #" 0 0 300 0 0)) outline #(struct:pen \"black\" 2 solid round round)))"
 #") #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0"
 #") #(struct:pulled-point 0 0 600 300 0 0) #(struct:pulled-point 0 0 0"
 #" 300 0 0)) 255 \"white\"))))))))) #(struct:translate 0.0 300.0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:point 6"
 #"00 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 104.5 135.0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:translate 5.0 7.5 #(struct:text \"P\" 0 1"
 #" \"black\" 15 #f swiss normal normal #f))) #(struct:translate 10.0 0"
 #".0 #(struct:translate 4.0 7.5 #(struct:text \"L\" 0 1 \"black\" 15 #"
 #"f swiss normal normal #f))))) #(struct:translate 18.0 0.0 #(struct:t"
 #"ranslate 5.0 7.5 #(struct:text \"E\" 0 1 \"black\" 15 #f swiss norma"
 #"l normal #f))))) #(struct:translate 28.0 0.0 #(struct:translate 5.0 "
 #"7.5 #(struct:text \"A\" 0 1 \"black\" 15 #f swiss normal normal #f))"
 #"))) #(struct:translate 38.0 0.0 #(struct:translate 5.0 7.5 #(struct:"
 #"text \"S\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:"
 #"translate 48.0 0.0 #(struct:translate 5.0 7.5 #(struct:text \"E\" 0 "
 #"1 \"black\" 15 #f swiss normal normal #f))))) #(struct:translate 58."
 #"0 0.0 #(struct:translate 2.0 7.5 #(struct:text \" \" 0 1 \"black\" 1"
 #"5 #f swiss normal normal #f))))) #(struct:translate 62.0 0.0 #(struc"
 #"t:translate 5.5 7.5 #(struct:text \"C\" 0 1 \"black\" 15 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 73.0 0.0 #(struct:translate 5"
 #".5 7.5 #(struct:text \"H\" 0 1 \"black\" 15 #f swiss normal normal #"
 #"f))))) #(struct:translate 84.0 0.0 #(struct:translate 6.0 7.5 #(stru"
 #"ct:text \"O\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 96.0 0.0 #(struct:translate 6.0 7.5 #(struct:text \"O\""
 #" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:translate "
 #"108.0 0.0 #(struct:translate 5.0 7.5 #(struct:text \"S\" 0 1 \"black"
 #"\" 15 #f swiss normal normal #f))))) #(struct:translate 118.0 0.0 #("
 #"struct:translate 5.0 7.5 #(struct:text \"E\" 0 1 \"black\" 15 #f swi"
 #"ss normal normal #f))))) #(struct:translate 128.0 0.0 #(struct:trans"
 #"late 2.0 7.5 #(struct:text \" \" 0 1 \"black\" 15 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 132.0 0.0 #(struct:translate 5.0 7.5"
 #" #(struct:text \"A\" 0 1 \"black\" 15 #f swiss normal normal #f)))))"
 #" #(struct:translate 142.0 0.0 #(struct:translate 2.0 7.5 #(struct:te"
 #"xt \" \" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 146.0 0.0 #(struct:translate 5.0 7.5 #(struct:text \"S\" 0 1"
 #" \"black\" 15 #f swiss normal normal #f))))) #(struct:translate 156."
 #"0 0.0 #(struct:translate 6.0 7.5 #(struct:text \"O\" 0 1 \"black\" 1"
 #"5 #f swiss normal normal #f))))) #(struct:translate 168.0 0.0 #(stru"
 #"ct:translate 5.5 7.5 #(struct:text \"N\" 0 1 \"black\" 15 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 179.0 0.0 #(struct:translate"
 #" 6.0 7.5 #(struct:text \"G\" 0 1 \"black\" 15 #f swiss normal normal"
 #" #f))))) #(struct:translate 59.0 15.0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 4.5 7.5 #(struct:text \"F\" 0 1 \"black\" 15 #f swiss norma"
 #"l normal #f))) #(struct:translate 9.0 0.0 #(struct:translate 4.0 7.5"
 #" #(struct:text \"e\" 0 1 \"black\" 15 #f swiss normal normal #f)))))"
 #" #(struct:translate 17.0 0.0 #(struct:translate 4.0 7.5 #(struct:tex"
 #"t \"e\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 25.0 0.0 #(struct:translat"
 #"e 4.0 7.5 #(struct:text \"d\" 0 1 \"black\" 15 #f swiss normal norma"
 #"l #f))))) #(struct:translate 33.0 0.0 #(struct:translate 4.0 7.5 #(s"
 #"truct:text \"b\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(s"
 #"truct:translate 41.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \""
 #"a\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:transla"
 #"te 49.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"c\" 0 1 \"bla"
 #"ck\" 15 #f swiss normal normal #f))))) #(struct:translate 57.0 0.0 #"
 #"(struct:translate 4.0 7.5 #(struct:text \"k\" 0 1 \"black\" 15 #f sw"
 #"iss normal normal #f))))) #(struct:translate 65.0 0.0 #(struct:trans"
 #"late 2.0 7.5 #(struct:text \":\" 0 1 \"black\" 15 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 69.0 0.0 #(struct:translate 2.0 7.5 "
 #"#(struct:text \" \" 0 1 \"black\" 15 #f swiss normal normal #f))))))"
 #") #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct"
 #":point 600 0) #(struct:point 600 300) #(struct:point 0 300)) #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 600 0 0 0) #(struct:pulled-point 0 0 600 300 0"
 #" 0) #(struct:pulled-point 0 0 0 300 0 0)) outline #(struct:pen \"bla"
 #"ck\" 2 solid round round)))) #(struct:translate 0 0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 600 0 0 0) #(struct:pulled-point 0 0 600 300 0 0) "
 #"#(struct:pulled-point 0 0 0 300 0 0)) 255 \"white\")))))))))))) #(st"
 #"ruct:bb 600.0 600.0 600.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-player"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 14259
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 250.0 105.0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0.0009765625 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 5"
 #".0 7.5 #(struct:text \"B\" 0 1 \"orange\" 15 #f swiss normal normal "
 #"#f))) #(struct:translate 10.0 0.0 #(struct:translate 4.0 7.5 #(struc"
 #"t:text \"a\" 0 1 \"orange\" 15 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 18.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"n\""
 #" 0 1 \"orange\" 15 #f swiss normal normal #f))))) #(struct:translate"
 #" 26.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"k\" 0 1 \"orang"
 #"e\" 15 #f swiss normal normal #f))))) #(struct:translate 34.0 0.0 #("
 #"struct:translate 5.0 7.5 #(struct:text \"A\" 0 1 \"orange\" 15 #f sw"
 #"iss normal normal #f))))) #(struct:translate 44.0 0.0 #(struct:trans"
 #"late 4.0 7.5 #(struct:text \"c\" 0 1 \"orange\" 15 #f swiss normal n"
 #"ormal #f))))) #(struct:translate 52.0 0.0 #(struct:translate 4.0 7.5"
 #" #(struct:text \"c\" 0 1 \"orange\" 15 #f swiss normal normal #f))))"
 #") #(struct:translate 60.0 0.0 #(struct:translate 4.0 7.5 #(struct:te"
 #"xt \"o\" 0 1 \"orange\" 15 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 68.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"u\" 0 1"
 #" \"orange\" 15 #f swiss normal normal #f))))) #(struct:translate 76."
 #"0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"n\" 0 1 \"orange\" "
 #"15 #f swiss normal normal #f))))) #(struct:translate 84.0 0.0 #(stru"
 #"ct:translate 2.0 7.5 #(struct:text \"t\" 0 1 \"orange\" 15 #f swiss "
 #"normal normal #f))))) #(struct:translate 88.0 0.0 #(struct:translate"
 #" 2.0 7.5 #(struct:text \" \" 0 1 \"orange\" 15 #f swiss normal norma"
 #"l #f))))) #(struct:translate 92.0 0.0 #(struct:translate 4.0 7.5 #(s"
 #"truct:text \"1\" 0 1 \"orange\" 15 #f swiss normal normal #f))))) #("
 #"struct:translate 100.0 0 #(struct:"
 #"translate 0.0 15.0 #(struct:text \"\\n\" 0 1 \"orange\" 15 #f swiss "
 #"normal normal #f))))) #(struct:translate 9.5 30.0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0.000976"
 #"5625 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:translate 5.0 7.5 #(struct:text \"B\" 0 1 \"black\" 15 #f swis"
 #"s normal normal #f))) #(struct:translate 10.0 0.0 #(struct:translate"
 #" 4.0 7.5 #(struct:text \"e\" 0 1 \"black\" 15 #f swiss normal normal"
 #" #f))))) #(struct:translate 18.0 0.0 #(struct:translate 2.0 7.5 #(st"
 #"ruct:text \"t\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 22.0 0.0 #(struct:translate 2.0 7.5 #(struct:text \"t"
 #"\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:translat"
 #"e 26.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"e\" 0 1 \"blac"
 #"k\" 15 #f swiss normal normal #f))))) #(struct:translate 34.0 0.0 #("
 #"struct:translate 2.5 7.5 #(struct:text \"r\" 0 1 \"black\" 15 #f swi"
 #"ss normal normal #f))))) #(struct:translate 39.0 0.0 #(struct:transl"
 #"ate 5.5 7.5 #(struct:text \"N\" 0 1 \"black\" 15 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 50.0 0.0 #(struct:translate 4.0 7.5 #"
 #"(struct:text \"o\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #"
 #"(struct:translate 58.0 0.0 #(struct:translate 5.5 7.5 #(struct:text "
 #"\"w\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:trans"
 #"late 69.0 0.0 #(struct:translate 2.0 7.5 #(struct:text \" \" 0 1 \"b"
 #"lack\" 15 #f swiss normal normal #f))))) #(struct:translate 73.0 0.0"
 #" #(struct:translate 4.0 7.5 #(struct:text \"2\" 0 1 \"black\" 15 #f "
 #"swiss normal normal #f))))) #(struct:translate 81.0 0 #(struct:trans"
 #"late 0.0 15.0 #(struct:text \"\\n\" 0 1 \"black\" 15 #f swiss normal"
 #" normal #f))))) #(struct:translate 16.5 30.0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 0 0.0009765625 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:translate 4.0 7.5 #(str"
 #"uct:text \"8\" 0 1 \"black\" 15 #f swiss normal normal #f))) #(struc"
 #"t:translate 8.0 0.0 #(struct:translate 2.0 7.5 #(struct:text \"t\" 0"
 #" 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:translate 12"
 #".0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"e\" 0 1 \"black\" "
 #"15 #f swiss normal normal #f))))) #(struct:translate 20.0 0.0 #(stru"
 #"ct:translate 4.0 7.5 #(struct:text \"e\" 0 1 \"black\" 15 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 28.0 0.0 #(struct:translate "
 #"4.0 7.5 #(struct:text \"n\" 0 1 \"black\" 15 #f swiss normal normal "
 #"#f))))) #(struct:translate 36.0 0.0 #(struct:translate 2.0 7.5 #(str"
 #"uct:text \" \" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(str"
 #"uct:translate 40.0 0.0 #(struct:t"
 #"ranslate 4.0 7.5 #(struct:text \"3\" 0 1 \"black\" 15 #f swiss norma"
 #"l normal #f))))) #(struct:translate 48.0 0 #(struct:translate 0.0 15"
 #".0 #(struct:text \"\\n\" 0 1 \"black\" 15 #f swiss normal normal #f)"
 #")))) #(struct:translate 24.0 30.0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 0 0 0 0)) 255 \"black\"))))))))) #(struct:translate 0 0 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 600 0) #(struct:point 600 30"
 #"0) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0) #("
 #"struct:pulled-point 0 0 600 300 0 0) #(struct:pulled-point 0 0 0 300"
 #" 0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(stru"
 #"ct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0) #(stru"
 #"ct:pulled-point 0 0 600 300 0 0) #(struct:pulled-point 0 0 0 300 0 0"
 #")) 255 \"white\"))))))))) #(struct:translate 0.0 300.0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 600 0) #(struct:point 600 300) "
 #"#(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 84.5 135.0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:translate 7.0 7.5 #(struct:text \""
 #"W\" 0 1 \"black\" 15 #f swiss normal normal #f))) #(struct:translate"
 #" 14.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"a\" 0 1 \"black"
 #"\" 15 #f swiss normal normal #f))))) #(struct:translate 22.0 0.0 #(s"
 #"truct:translate 1.5 7.5 #(struct:text \"i\" 0 1 \"black\" 15 #f swis"
 #"s normal normal #f))))) #(struct:translate 25.0 0.0 #(struct:transla"
 #"te 2.0 7.5 #(struct:text \"t\" 0 1 \"black\" 15 #f swiss normal norm"
 #"al #f))))) #(struct:translate 29.0 0.0 #(struct:translate 1.5 7.5 #("
 #"struct:text \"i\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #("
 #"struct:translate 32.0 0.0 #(struct"
 #":translate 4.0 7.5 #(struct:text \"n\" 0 1 \"black\" 15 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 40.0 0.0 #(struct:translate 4."
 #"0 7.5 #(struct:text \"g\" 0 1 \"black\" 15 #f swiss normal normal #f"
 #"))))) #(struct:translate 48.0 0.0 #(struct:translate 2.0 7.5 #(struc"
 #"t:text \" \" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struc"
 #"t:translate 52.0 0.0 #(struct:translate 2.0 7.5 #(struct:text \"f\" "
 #"0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:translate 5"
 #"6.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"o\" 0 1 \"black\""
 #" 15 #f swiss normal normal #f))))) #(struct:translate 64.0 0.0 #(str"
 #"uct:translate 2.5 7.5 #(struct:text \"r\" 0 1 \"black\" 15 #f swiss "
 #"normal normal #f))))) #(struct:translate 69.0 0.0 #(struct:translate"
 #" 2.0 7.5 #(struct:text \" \" 0 1 \"black\" 15 #f swiss normal normal"
 #" #f))))) #(struct:translate 73.0 0.0 #(struct:translate 5.0 7.5 #(st"
 #"ruct:text \"S\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 83.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"o"
 #"\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:translat"
 #"e 91.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"n\" 0 1 \"blac"
 #"k\" 15 #f swiss normal normal #f))))) #(struct:translate 99.0 0.0 #("
 #"struct:translate 4.0 7.5 #(struct:text \"g\" 0 1 \"black\" 15 #f swi"
 #"ss normal normal #f))))) #(struct:translate 107.0 0.0 #(struct:trans"
 #"late 2.0 7.5 #(struct:text \" \" 0 1 \"black\" 15 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 111.0 0.0 #(struct:translate 4.0 7.5"
 #" #(struct:text \"o\" 0 1 \"black\" 15 #f swiss normal normal #f)))))"
 #" #(struct:translate 119.0 0.0 #(struct:translate 2.5 7.5 #(struct:te"
 #"xt \"r\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 124.0 0.0 #(struct:translate 2.0 7.5 #(struct:text \" \" 0 1"
 #" \"black\" 15 #f swiss normal normal #f))))) #(struct:translate 128."
 #"0 0.0 #(struct:translate 6.0 7.5 #(struct:text \"M\" 0 1 \"black\" 1"
 #"5 #f swiss normal normal #f))))) #(struct:translate 140.0 0.0 #(stru"
 #"ct:translate 4.0 7.5 #(struct:text \"e\" 0 1 \"black\" 15 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 148.0 0.0 #(struct:translate"
 #" 2.0 7.5 #(struct:text \"t\" 0 1 \"black\" 15 #f swiss normal normal"
 #" #f))))) #(struct:translate 152.0 0.0 #(struct:translate 4.0 7.5 #(s"
 #"truct:text \"a\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(s"
 #"truct:translate 160.0 0.0 #(struct"
 #":translate 5.5 7.5 #(struct:text \"D\" 0 1 \"black\" 15 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 171.0 0.0 #(struct:translate 4"
 #".0 7.5 #(struct:text \"a\" 0 1 \"black\" 15 #f swiss normal normal #"
 #"f))))) #(struct:translate 179.0 0.0 #(struct:translate 2.0 7.5 #(str"
 #"uct:text \"t\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(str"
 #"uct:translate 183.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"a"
 #"\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:translat"
 #"e 191.0 0.0 #(struct:translate 6.0 7.5 #(struct:text \"M\" 0 1 \"bla"
 #"ck\" 15 #f swiss normal normal #f))))) #(struct:translate 203.0 0.0 "
 #"#(struct:translate 4.0 7.5 #(struct:text \"s\" 0 1 \"black\" 15 #f s"
 #"wiss normal normal #f))))) #(struct:translate 211.0 0.0 #(struct:tra"
 #"nslate 4.0 7.5 #(struct:text \"g\" 0 1 \"black\" 15 #f swiss normal "
 #"normal #f))))) #(struct:translate 219.0 0.0 #(struct:translate 2.0 7"
 #".5 #(struct:text \".\" 0 1 \"black\" 15 #f swiss normal normal #f)))"
 #")) #(struct:translate 223.0 0.0 #(struct:translate 2.0 7.5 #(struct:"
 #"text \".\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:"
 #"translate 227.0 0.0 #(struct:translate 2.0 7.5 #(struct:text \".\" 0"
 #" 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:translate 79"
 #".0 15.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:translate 4.5 7.5 #(struct:text"
 #" \"F\" 0 1 \"black\" 15 #f swiss normal normal #f))) #(struct:transl"
 #"ate 9.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"e\" 0 1 \"bla"
 #"ck\" 15 #f swiss normal normal #f))))) #(struct:translate 17.0 0.0 #"
 #"(struct:translate 4.0 7.5 #(struct:text \"e\" 0 1 \"black\" 15 #f sw"
 #"iss normal normal #f))))) #(struct:translate 25.0 0.0 #(struct:trans"
 #"late 4.0 7.5 #(struct:text \"d\" 0 1 \"black\" 15 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 33.0 0.0 #(struct:translate 4.0 7.5 "
 #"#(struct:text \"b\" 0 1 \"black\" 15 #f swiss normal normal #f))))) "
 #"#(struct:translate 41.0 0.0 #(struct:translate 4.0 7.5 #(struct:text"
 #" \"a\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 49.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"c\" 0 1 \""
 #"black\" 15 #f swiss normal normal #f))))) #(struct:translate 57.0 0."
 #"0 #(struct:translate 4.0 7.5 #(struct:text \"k\" 0 1 \"black\" 15 #f"
 #" swiss normal normal #f))))) #(struct:translate 65.0 0.0 #(struct:tr"
 #"anslate 2.0 7.5 #(struct:text \":\" 0 1 \"black\" 15 #f swiss normal"
 #" normal #f))))) #(struct:translate 69.0 0.0 #(struct:translate 2.0 7"
 #".5 #(struct:text \" \" 0 1 \"black\" 15 #f swiss normal normal #f)))"
 #")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(str"
 #"uct:point 600 0) #(struct:point 600 300) #(struct:point 0 300)) #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 600 0 0 0) #(struct:pulled-point 0 0 600 30"
 #"0 0 0) #(struct:pulled-point 0 0 0 300 0 0)) outline #(struct:pen \""
 #"black\" 2 solid round round)))) #(struct:translate 0 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 600 0 0 0) #(struct:pulled-point 0 0 600 300 0 "
 #"0) #(struct:pulled-point 0 0 0 300 0 0)) 255 \"white\")))))))))))) #"
 #"(struct:bb 600.0 600.0 600.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-player"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-8"
0 0 24 3 2 #") "
0 6           4 21 14257
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 250.0 105.0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0.0009765625 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 5"
 #".0 7.5 #(struct:text \"B\" 0 1 \"black\" 15 #f swiss normal normal #"
 #"f))) #(struct:translate 10.0 0.0 #(struct:translate 4.0 7.5 #(struct"
 #":text \"a\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct"
 #":translate 18.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"n\" 0"
 #" 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:translate 26"
 #".0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"k\" 0 1 \"black\" "
 #"15 #f swiss normal normal #f))))) #(struct:translate 34.0 0.0 #(stru"
 #"ct:translate 5.0 7.5 #(struct:text \"A\" 0 1 \"black\" 15 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 44.0 0.0 #(struct:translate "
 #"4.0 7.5 #(struct:text \"c\" 0 1 \"black\" 15 #f swiss normal normal "
 #"#f))))) #(struct:translate 52.0 0.0 #(struct:translate 4.0 7.5 #(str"
 #"uct:text \"c\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(str"
 #"uct:translate 60.0 0.0 #(struct:t"
 #"ranslate 4.0 7.5 #(struct:text \"o\" 0 1 \"black\" 15 #f swiss norma"
 #"l normal #f))))) #(struct:translate 68.0 0.0 #(struct:translate 4.0 "
 #"7.5 #(struct:text \"u\" 0 1 \"black\" 15 #f swiss normal normal #f))"
 #"))) #(struct:translate 76.0 0.0 #(struct:translate 4.0 7.5 #(struct:"
 #"text \"n\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:"
 #"translate 84.0 0.0 #(struct:translate 2.0 7.5 #(struct:text \"t\" 0 "
 #"1 \"black\" 15 #f swiss normal normal #f))))) #(struct:translate 88."
 #"0 0.0 #(struct:translate 2.0 7.5 #(struct:text \" \" 0 1 \"black\" 1"
 #"5 #f swiss normal normal #f))))) #(struct:translate 92.0 0.0 #(struc"
 #"t:translate 4.0 7.5 #(struct:text \"1\" 0 1 \"black\" 15 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 100.0 0 #(struct:translate 0."
 #"0 15.0 #(struct:text \"\\n\" 0 1 \"black\" 15 #f swiss normal normal"
 #" #f))))) #(struct:translate 9.5 30.0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0.0009765625 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 5.0 7.5 #(struct:text \"B\" 0 1 \"orange\" 15 #f swiss normal nor"
 #"mal #f))) #(struct:translate 10.0 0.0 #(struct:translate 4.0 7.5 #(s"
 #"truct:text \"e\" 0 1 \"orange\" 15 #f swiss normal normal #f))))) #("
 #"struct:translate 18.0 0.0 #(struct"
 #":translate 2.0 7.5 #(struct:text \"t\" 0 1 \"orange\" 15 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 22.0 0.0 #(struct:translate 2"
 #".0 7.5 #(struct:text \"t\" 0 1 \"orange\" 15 #f swiss normal normal "
 #"#f))))) #(struct:translate 26.0 0.0 #(struct:translate 4.0 7.5 #(str"
 #"uct:text \"e\" 0 1 \"orange\" 15 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 34.0 0.0 #(struct:translate 2.5 7.5 #(struct:text \"r"
 #"\" 0 1 \"orange\" 15 #f swiss normal normal #f))))) #(struct:transla"
 #"te 39.0 0.0 #(struct:translate 5.5 7.5 #(struct:text \"N\" 0 1 \"ora"
 #"nge\" 15 #f swiss normal normal #f))))) #(struct:translate 50.0 0.0 "
 #"#(struct:translate 4.0 7.5 #(struct:text \"o\" 0 1 \"orange\" 15 #f "
 #"swiss normal normal #f))))) #(struct:translate 58.0 0.0 #(struct:tra"
 #"nslate 5.5 7.5 #(struct:text \"w\" 0 1 \"orange\" 15 #f swiss normal"
 #" normal #f))))) #(struct:translate 69.0 0.0 #(struct:translate 2.0 7"
 #".5 #(struct:text \" \" 0 1 \"orange\" 15 #f swiss normal normal #f))"
 #"))) #(struct:translate 73.0 0.0 #(struct:translate 4.0 7.5 #(struct:"
 #"text \"2\" 0 1 \"orange\" 15 #f swiss normal normal #f))))) #(struct"
 #":translate 81.0 0 #(struct:translate 0.0 15.0 #(struct:text \"\\n\" "
 #"0 1 \"orange\" 15 #f swiss normal normal #f))))) #(struct:translate "
 #"16.5 30.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0.0009765625 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:translate 4.0 7.5 #(struct:text \"8\" 0 1 \"black\" 15 #f "
 #"swiss normal normal #f))) #(struct:translate 8.0 0.0 #(struct:transl"
 #"ate 2.0 7.5 #(struct:text \"t\" 0 1 \"black\" 15 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 12.0 0.0 #(struct:translate 4.0 7.5 #"
 #"(struct:text \"e\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #"
 #"(struct:translate 20.0 0.0 #(struct:translate 4.0 7.5 #(struct:text "
 #"\"e\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:trans"
 #"late 28.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"n\" 0 1 \"b"
 #"lack\" 15 #f swiss normal normal #f))))) #(struct:translate 36.0 0.0"
 #" #(struct:translate 2.0 7.5 #(struct:text \" \" 0 1 \"black\" 15 #f "
 #"swiss normal normal #f))))) #(struct:translate 40.0 0.0 #(struct:tra"
 #"nslate 4.0 7.5 #(struct:text \"3\" 0 1 \"black\" 15 #f swiss normal "
 #"normal #f))))) #(struct:translate 48.0 0 #(struct:translate 0.0 15.0"
 #" #(struct:text \"\\n\" 0 1 \"black\" 15 #f swiss normal normal #f)))"
 #")) #(struct:translate 24.0 30.0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"0 0 0 0)) 255 \"black\"))))))))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 600 0) #(struct:point 600 300)"
 #" #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0) #(st"
 #"ruct:pulled-point 0 0 600 300 0 0) #(struct:pulled-point 0 0 0 300 0"
 #" 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(struct"
 #":translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pul"
 #"led-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0) #(struct"
 #":pulled-point 0 0 600 300 0 0) #(struct:pulled-point 0 0 0 300 0 0))"
 #" 255 \"white\"))))))))) #(struct:translate 0.0 300.0 #(struct:crop ("
 #"#(struct:point 0 0) #(struct:point 600 0) #(struct:point 600 300) #("
 #"struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 84.5 135.0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:t"
 #"ranslate 7.0 7.5 #(struct:text \"W\" 0 1 \"black\" 15 #f swiss norma"
 #"l normal #f))) #(struct:translate 14.0 0.0 #(struct:translate 4.0 7."
 #"5 #(struct:text \"a\" 0 1 \"black\" 15 #f swiss normal normal #f))))"
 #") #(struct:translate 22.0 0.0 #(struct:translate 1.5 7.5 #(struct:te"
 #"xt \"i\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 25.0 0.0 #(struct:translate 2.0 7.5 #(struct:text \"t\" 0 1 "
 #"\"black\" 15 #f swiss normal normal #f))))) #(struct:translate 29.0 "
 #"0.0 #(struct:translate 1.5 7.5 #(struct:text \"i\" 0 1 \"black\" 15 "
 #"#f swiss normal normal #f))))) #(struct:translate 32.0 0.0 #(struct:"
 #"translate 4.0 7.5 #(struct:text \"n\" 0 1 \"black\" 15 #f swiss norm"
 #"al normal #f))))) #(struct:translate 40.0 0.0 #(struct:translate 4.0"
 #" 7.5 #(struct:text \"g\" 0 1 \"black\" 15 #f swiss normal normal #f)"
 #")))) #(struct:translate 48.0 0.0 #(struct:translate 2.0 7.5 #(struct"
 #":text \" \" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct"
 #":translate 52.0 0.0 #(struct:translate 2.0 7.5 #(struct:text \"f\" 0"
 #" 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:translate 56"
 #".0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"o\" 0 1 \"black\" "
 #"15 #f swiss normal normal #f))))) #(struct:translate 64.0 0.0 #(stru"
 #"ct:translate 2.5 7.5 #(struct:text \"r\" 0 1 \"black\" 15 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 69.0 0.0 #(struct:translate "
 #"2.0 7.5 #(struct:text \" \" 0 1 \"black\" 15 #f swiss normal normal "
 #"#f))))) #(struct:translate 73.0 0.0 #(struct:translate 5.0 7.5 #(str"
 #"uct:text \"S\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(str"
 #"uct:translate 83.0 0.0 #(struct:t"
 #"ranslate 4.0 7.5 #(struct:text \"o\" 0 1 \"black\" 15 #f swiss norma"
 #"l normal #f))))) #(struct:translate 91.0 0.0 #(struct:translate 4.0 "
 #"7.5 #(struct:text \"n\" 0 1 \"black\" 15 #f swiss normal normal #f))"
 #"))) #(struct:translate 99.0 0.0 #(struct:translate 4.0 7.5 #(struct:"
 #"text \"g\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:"
 #"translate 107.0 0.0 #(struct:translate 2.0 7.5 #(struct:text \" \" 0"
 #" 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:translate 11"
 #"1.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"o\" 0 1 \"black\""
 #" 15 #f swiss normal normal #f))))) #(struct:translate 119.0 0.0 #(st"
 #"ruct:translate 2.5 7.5 #(struct:text \"r\" 0 1 \"black\" 15 #f swiss"
 #" normal normal #f))))) #(struct:translate 124.0 0.0 #(struct:transla"
 #"te 2.0 7.5 #(struct:text \" \" 0 1 \"black\" 15 #f swiss normal norm"
 #"al #f))))) #(struct:translate 128.0 0.0 #(struct:translate 6.0 7.5 #"
 #"(struct:text \"M\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #"
 #"(struct:translate 140.0 0.0 #(struct:translate 4.0 7.5 #(struct:text"
 #" \"e\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 148.0 0.0 #(struct:translat"
 #"e 2.0 7.5 #(struct:text \"t\" 0 1 \"black\" 15 #f swiss normal norma"
 #"l #f))))) #(struct:translate 152.0 0.0 #(struct:translate 4.0 7.5 #("
 #"struct:text \"a\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #("
 #"struct:translate 160.0 0.0 #(struct:translate 5.5 7.5 #(struct:text "
 #"\"D\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:trans"
 #"late 171.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"a\" 0 1 \""
 #"black\" 15 #f swiss normal normal #f))))) #(struct:translate 179.0 0"
 #".0 #(struct:translate 2.0 7.5 #(struct:text \"t\" 0 1 \"black\" 15 #"
 #"f swiss normal normal #f))))) #(struct:translate 183.0 0.0 #(struct:"
 #"translate 4.0 7.5 #(struct:text \"a\" 0 1 \"black\" 15 #f swiss norm"
 #"al normal #f))))) #(struct:translate 191.0 0.0 #(struct:translate 6."
 #"0 7.5 #(struct:text \"M\" 0 1 \"black\" 15 #f swiss normal normal #f"
 #"))))) #(struct:translate 203.0 0.0 #(struct:translate 4.0 7.5 #(stru"
 #"ct:text \"s\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 211.0 0.0 #(struct:t"
 #"ranslate 4.0 7.5 #(struct:text \"g\" 0 1 \"black\" 15 #f swiss norma"
 #"l normal #f))))) #(struct:translate 219.0 0.0 #(struct:translate 2.0"
 #" 7.5 #(struct:text \".\" 0 1 \"black\" 15 #f swiss normal normal #f)"
 #")))) #(struct:translate 223.0 0.0 #(struct:translate 2.0 7.5 #(struc"
 #"t:text \".\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struc"
 #"t:translate 227.0 0.0 #(struct:translate 2.0 7.5 #(struct:text \".\""
 #" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:translate "
 #"79.0 15.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:translate 4.5 7.5 #(struct:te"
 #"xt \"F\" 0 1 \"black\" 15 #f swiss normal normal #f))) #(struct:tran"
 #"slate 9.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"e\" 0 1 \"b"
 #"lack\" 15 #f swiss normal normal #f))))) #(struct:translate 17.0 0.0"
 #" #(struct:translate 4.0 7.5 #(struct:text \"e\" 0 1 \"black\" 15 #f "
 #"swiss normal normal #f))))) #(struct:translate 25.0 0.0 #(struct:tra"
 #"nslate 4.0 7.5 #(struct:text \"d\" 0 1 \"black\" 15 #f swiss normal "
 #"normal #f))))) #(struct:translate 33.0 0.0 #(struct:translate 4.0 7."
 #"5 #(struct:text \"b\" 0 1 \"black\" 15 #f swiss normal normal #f))))"
 #") #(struct:translate 41.0 0.0 #(struct:translate 4.0 7.5 #(struct:te"
 #"xt \"a\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 49.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"c\" 0 1 "
 #"\"black\" 15 #f swiss normal normal #f))))) #(struct:translate 57.0 "
 #"0.0 #(struct:translate 4.0 7.5 #(struct:text \"k\" 0 1 \"black\" 15 "
 #"#f swiss normal normal #f))))) #(struct:translate 65.0 0.0 #(struct:"
 #"translate 2.0 7.5 #(struct:text \":\" 0 1 \"black\" 15 #f swiss norm"
 #"al normal #f))))) #(struct:translate 69.0 0.0 #(struct:translate 2.0"
 #" 7.5 #(struct:text \" \" 0 1 \"black\" 15 #f swiss normal normal #f)"
 #")))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(s"
 #"truct:point 600 0) #(struct:point 600 300) #(struct:point 0 300)) #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 600 0 0 0) #(struct:pulled-point 0 0 600 "
 #"300 0 0) #(struct:pulled-point 0 0 0 300 0 0)) outline #(struct:pen "
 #"\"black\" 2 solid round round)))) #(struct:translate 0 0 #(struct:tr"
 #"anslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(s"
 #"truct:pulled-point 0 0 600 0 0 0) #(struct:pulled-point 0 0 600 300 "
 #"0 0) #(struct:pulled-point 0 0 0 300 0 0)) 255 \"white\"))))))))))))"
 #" #(struct:bb 600.0 600.0 600.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-player"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-3"
0 0 24 3 2 #") "
0 6           4 21 14843
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 250.0 135.0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0.0009765625 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 5"
 #".0 7.5 #(struct:text \"B\" 0 1 \"orange\" 15 #f swiss normal normal "
 #"#f))) #(struct:translate 10.0 0.0 #(struct:translate 4.0 7.5 #(struc"
 #"t:text \"a\" 0 1 \"orange\" 15 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 18.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"n\""
 #" 0 1 \"orange\" 15 #f swiss normal normal #f))))) #(struct:translate"
 #" 26.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"k\" 0 1 \"orang"
 #"e\" 15 #f swiss normal normal #f))))) #(struct:translate 34.0 0.0 #("
 #"struct:translate 5.0 7.5 #(struct:text \"A\" 0 1 \"orange\" 15 #f sw"
 #"iss normal normal #f))))) #(struct:translate 44.0 0.0 #(struct:trans"
 #"late 4.0 7.5 #(struct:text \"c\" 0 1 \"orange\" 15 #f swiss normal n"
 #"ormal #f))))) #(struct:translate 52.0 0.0 #(struct:translate 4.0 7.5"
 #" #(struct:text \"c\" 0 1 \"orange\" 15 #f swiss normal normal #f))))"
 #") #(struct:translate 60.0 0.0 #(struct:translate 4.0 7.5 #(struct:te"
 #"xt \"o\" 0 1 \"orange\" 15 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 68.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"u\" 0 1"
 #" \"orange\" 15 #f swiss normal normal #f))))) #(struct:translate 76."
 #"0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"n\" 0 1 \"orange\" "
 #"15 #f swiss normal normal #f))))) #(struct:translate 84.0 0.0 #(stru"
 #"ct:translate 2.0 7.5 #(struct:text \"t\" 0 1 \"orange\" 15 #f swiss "
 #"normal normal #f))))) #(struct:translate 88.0 0.0 #(struct:translate"
 #" 2.0 7.5 #(struct:text \" \" 0 1 \"orange\" 15 #f swiss normal norma"
 #"l #f))))) #(struct:translate 92.0 0.0 #(struct:translate 4.0 7.5 #(s"
 #"truct:text \"1\" 0 1 \"orange\" 15 #f swiss normal normal #f))))) #("
 #"struct:translate 100.0 0 #(struct:"
 #"translate 0.0 15.0 #(struct:text \"\\n\" 0 1 \"orange\" 15 #f swiss "
 #"normal normal #f))))) #(struct:translate 50.0 30.0 #(struct:translat"
 #"e 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 0 0 0 0)) 255 \"black\"))))) #(struct:translate 0"
 #" 0 #(struct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct"
 #":point 600 300) #(struct:point 0 300)) #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"600 0 0 0) #(struct:pulled-point 0 0 600 300 0 0) #(struct:pulled-po"
 #"int 0 0 0 300 0 0)) outline #(struct:pen \"black\" 2 solid round rou"
 #"nd)))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 "
 #"0 0 0) #(struct:pulled-point 0 0 600 300 0 0) #(struct:pulled-point "
 #"0 0 0 300 0 0)) 255 \"white\"))))))))) #(struct:translate 0.0 300.0 "
 #"#(struct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:po"
 #"int 600 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 161.0 170.0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 2.5 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 4.5 "
 #"7.5 #(struct:text \"F\" 0 1 \"black\" 15 #f swiss normal normal #f))"
 #") #(struct:translate 9.0 0.0 #(struct:translate 4.0 7.5 #(struct:tex"
 #"t \"e\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 17.0 0.0 #(struct:translat"
 #"e 4.0 7.5 #(struct:text \"e\" 0 1 \"black\" 15 #f swiss normal norma"
 #"l #f))))) #(struct:translate 25.0 0.0 #(struct:translate 4.0 7.5 #(s"
 #"truct:text \"d\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(s"
 #"truct:translate 33.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \""
 #"b\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:transla"
 #"te 41.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"a\" 0 1 \"bla"
 #"ck\" 15 #f swiss normal normal #f))))) #(struct:translate 49.0 0.0 #"
 #"(struct:translate 4.0 7.5 #(struct:text \"c\" 0 1 \"black\" 15 #f sw"
 #"iss normal normal #f))))) #(struct:translate 57.0 0.0 #(struct:trans"
 #"late 4.0 7.5 #(struct:text \"k\" 0 1 \"black\" 15 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 65.0 0.0 #(struct:translate 2.0 7.5 "
 #"#(struct:text \":\" 0 1 \"black\" 15 #f swiss normal normal #f))))) "
 #"#(struct:translate 69.0 0.0 #(struct:translate 2.0 7.5 #(struct:text"
 #" \" \" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 0 15.0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:translate 5.5 7.5 #(struct:text \"U\" 0 1 \"black\" 15"
 #" #f swiss normal normal #f))) #(struct:translate 11.0 0.0 #(struct:t"
 #"ranslate 4.0 7.5 #(struct:text \"p\" 0 1 \"black\" 15 #f swiss norma"
 #"l normal #f))))) #(struct:translate 19.0 0.0 #(struct:translate 2.0 "
 #"7.5 #(struct:text \" \" 0 1 \"black\" 15 #f swiss normal normal #f))"
 #"))) #(struct:translate 23.0 0.0 #(struct:translate 5.5 7.5 #(struct:"
 #"text \"N\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:"
 #"translate 34.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"e\" 0 "
 #"1 \"black\" 15 #f swiss normal normal #f))))) #(struct:translate 42."
 #"0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"x\" 0 1 \"black\" 1"
 #"5 #f swiss normal normal #f))))) #(struct:translate 50.0 0.0 #(struc"
 #"t:translate 2.0 7.5 #(struct:text \"t\" 0 1 \"black\" 15 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 54.0 0.0 #(struct:translate 2"
 #".0 7.5 #(struct:text \":\" 0 1 \"black\" 15 #f swiss normal normal #"
 #"f))))) #(struct:translate 58.0 0.0 #(struct:translate 2.0 7.5 #(stru"
 #"ct:text \" \" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 62.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"y\""
 #" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:translate "
 #"70.0 0.0 #(struct:translate 4.0 "
 #"7.5 #(struct:text \"o\" 0 1 \"black\" 15 #f swiss normal normal #f))"
 #"))))) #(struct:translate 10.0 30.0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:tran"
 #"slate 5.0 7.5 #(struct:text \"A\" 0 1 \"black\" 15 #f swiss normal n"
 #"ormal #f))) #(struct:translate 10.0 0.0 #(struct:translate 2.5 7.5 #"
 #"(struct:text \"r\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #"
 #"(struct:translate 15.0 0.0 #(struct:translate 2.0 7.5 #(struct:text "
 #"\"t\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:trans"
 #"late 19.0 0.0 #(struct:translate 1.5 7.5 #(struct:text \"i\" 0 1 \"b"
 #"lack\" 15 #f swiss normal normal #f))))) #(struct:translate 22.0 0.0"
 #" #(struct:translate 4.0 7.5 #(struct:text \"s\" 0 1 \"black\" 15 #f "
 #"swiss normal normal #f))))) #(struct:translate 30.0 0.0 #(struct:tra"
 #"nslate 2.0 7.5 #(struct:text \"t\" 0 1 \"black\" 15 #f swiss normal "
 #"normal #f))))) #(struct:translate 34.0 0.0 #(struct:translate 2.0 7."
 #"5 #(struct:text \":\" 0 1 \"black\" 15 #f swiss normal normal #f))))"
 #") #(struct:translate 38.0 0.0 #(struct:translate 2.0 7.5 #(struct:te"
 #"xt \" \" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 42.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"y\" 0 1 "
 #"\"black\" 15 #f swiss normal normal #f))))) #(struct:translate 50.0 "
 #"0.0 #(struct:translate 4.0 7.5 #(struct:text \"o\" 0 1 \"black\" 15 "
 #"#f swiss normal normal #f))))))) #(struct:translate 10.5 45.0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 5.0 7.5 #(struct:text \"A\" 0 1 \"black\" 15 #f"
 #" swiss normal normal #f))) #(struct:translate 10.0 0.0 #(struct:tran"
 #"slate 1.5 7.5 #(struct:text \"l\" 0 1 \"black\" 15 #f swiss normal n"
 #"ormal #f))))) #(struct:translate 13.0 0.0 #(struct:translate 4.0 7.5"
 #" #(struct:text \"b\" 0 1 \"black\" 15 #f swiss normal normal #f)))))"
 #" #(struct:translate 21.0 0.0 #(struct:translate 4.0 7.5 #(struct:tex"
 #"t \"u\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 29.0 0.0 #(struct:translat"
 #"e 6.0 7.5 #(struct:text \"m\" 0 1 \"black\" 15 #f swiss normal norma"
 #"l #f))))) #(struct:translate 41.0 0.0 #(struct:translate 2.0 7.5 #(s"
 #"truct:text \":\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(s"
 #"truct:translate 45.0 0.0 #(struct:translate 2.0 7.5 #(struct:text \""
 #" \" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:transla"
 #"te 49.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"o\" 0 1 \"bla"
 #"ck\" 15 #f swiss normal normal #f))))))) #(struct:translate 0 0 #(st"
 #"ruct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:point "
 #"600 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 105.0 142.5 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:translate 5.0 7.5 #(struct:text "
 #"\"P\" 0 1 \"black\" 15 #f swiss normal normal #f))) #(struct:transla"
 #"te 10.0 0.0 #(struct:translate 2.5 7.5 #(struct:text \"r\" 0 1 \"bla"
 #"ck\" 15 #f swiss normal normal #f))))) #(struct:translate 15.0 0.0 #"
 #"(struct:translate 4.0 7.5 #(struct:text \"e\" 0 1 \"black\" 15 #f sw"
 #"iss normal normal #f))))) #(struct:translate 23.0 0.0 #(struct:trans"
 #"late 4.0 7.5 #(struct:text \"s\" 0 1 \"black\" 15 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 31.0 0.0 #(struct:translate 4.0 7.5 "
 #"#(struct:text \"s\" 0 1 \"black\" 15 #f swiss normal normal #f))))) "
 #"#(struct:translate 39.0 0.0 #(struct:translate 2.0 7.5 #(struct:text"
 #" \" \" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 43.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"s\" 0 1 \""
 #"black\" 15 #f swiss normal normal #f))))) #(struct:translate 51.0 0."
 #"0 #(struct:translate 4.0 7.5 #(struct:text \"p\" 0 1 \"black\" 15 #f"
 #" swiss normal normal #f))))) #(struct:translate 59.0 0.0 #(struct:tr"
 #"anslate 4.0 7.5 #(struct:text \"a\" 0 1 \"black\" 15 #f swiss normal"
 #" normal #f))))) #(struct:translate 67.0 0.0 #(struct:translate 4.0 7"
 #".5 #(struct:text \"c\" 0 1 \"black\" 15 #f swiss normal normal #f)))"
 #")) #(struct:translate 75.0 0.0 #(struct:translate 4.0 7.5 #(struct:t"
 #"ext \"e\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 83.0 0.0 #(struct:translate 2.0 7.5 #(struct:text \" \" 0 1"
 #" \"black\" 15 #f swiss normal normal #f))))) #(struct:translate 87.0"
 #" 0.0 #(struct:translate 2.0 7.5 #(struct:text \"t\" 0 1 \"black\" 15"
 #" #f swiss normal normal #f))))) #(struct:translate 91.0 0.0 #(struct"
 #":translate 4.0 7.5 #(struct:text \"o\" 0 1 \"black\" 15 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 99.0 0.0 #(struct:translate 2."
 #"0 7.5 #(struct:text \" \" 0 1 \"black\" 15 #f swiss normal normal #f"
 #"))))) #(struct:translate 103.0 0.0 #(struct:translate 4.0 7.5 #(stru"
 #"ct:text \"p\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 111.0 0.0 #(struct:t"
 #"ranslate 1.5 7.5 #(struct:text \"l\" 0 1 \"black\" 15 #f swiss norma"
 #"l normal #f))))) #(struct:translate 114.0 0.0 #(struct:translate 4.0"
 #" 7.5 #(struct:text \"a\" 0 1 \"black\" 15 #f swiss normal normal #f)"
 #")))) #(struct:translate 122.0 0.0 #(struct:translate 4.0 7.5 #(struc"
 #"t:text \"y\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struc"
 #"t:translate 130.0 0.0 #(struct:translate 2.0 7.5 #(struct:text \" \""
 #" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:translate "
 #"134.0 0.0 #(struct:translate 2.0 7.5 #(struct:text \"t\" 0 1 \"black"
 #"\" 15 #f swiss normal normal #f))))) #(struct:translate 138.0 0.0 #("
 #"struct:translate 4.0 7.5 #(struct:text \"h\" 0 1 \"black\" 15 #f swi"
 #"ss normal normal #f))))) #(struct:translate 146.0 0.0 #(struct:trans"
 #"late 4.0 7.5 #(struct:text \"e\" 0 1 \"black\" 15 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 154.0 0.0 #(struct:translate 2.0 7.5"
 #" #(struct:text \" \" 0 1 \"black\" 15 #f swiss normal normal #f)))))"
 #" #(struct:translate 158.0 0.0 #(struct:translate 4.0 7.5 #(struct:te"
 #"xt \"s\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 166.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"o\" 0 1"
 #" \"black\" 15 #f swiss normal normal #f))))) #(struct:translate 174."
 #"0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"n\" 0 1 \"black\" 1"
 #"5 #f swiss normal normal #f))))) #(struct:translate 182.0 0.0 #(stru"
 #"ct:translate 4.0 7.5 #(struct:text \"g\" 0 1 \"black\" 15 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:"
 #"point 0 0) #(struct:point 600 0) #(struct:point 600 300) #(struct:po"
 #"int 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0) #(struct:pulled-"
 #"point 0 0 600 300 0 0) #(struct:pulled-point 0 0 0 300 0 0)) outline"
 #" #(struct:pen \"black\" 2 solid round round)))) #(struct:translate 0"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0) #(struct:pulled-poin"
 #"t 0 0 600 300 0 0) #(struct:pulled-point 0 0 0 300 0 0)) 255 \"white"
 #"\")))))))))))))))) #(struct:bb 600.0 600.0 600.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-player"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"boolean?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-mpstate"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 13 #"draw-songmenu"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 18 #"waiting-for-choice"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 2 #") "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 7 #"string?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-mpstate"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 7 #"number?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-mpstate"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 13 #"draw-songmenu"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 13 #"waiting-image"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 2 #") "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"song?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-mpstate"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 13 #"draw-songmenu"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-mpdata"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 2 #") "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 14 3 12 #"INSTRUCTIONS"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; waiting-image : MusicPlayer -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 63
#"; creates an image that is shown when the player is waiting for"
0 0 24 29 1 #"\n"
0 0 17 3 67
#"; a song or metadatamsg to be requested or received from the server"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"waiting-image"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-0"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"dislike\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 36 #"\"Waiting for Song or MetaDataMsg...\""
0 0 24 3 1 #" "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Feedback: \""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"dislike\""
0 0 24 3 2 #") "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"waiting-image"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"requested\""
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"none\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 36 #"\"Waiting for Song or MetaDataMsg...\""
0 0 24 3 1 #" "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Feedback: \""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"none\""
0 0 24 3 2 #") "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"waiting-image"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 36 #"\"Waiting for Song or MetaDataMsg...\""
0 0 24 3 1 #" "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Feedback: \""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #") "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"waiting-image"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 36 #"\"Waiting for Song or MetaDataMsg...\""
0 0 24 3 1 #" "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Feedback: \""
0 0 24 3 2 #" ("
0 0 14 3 15 #"player-feedback"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #")) "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #"; waiting-for-choice : MusicPlayer -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 63
#"; creates an image that is shown when the player is waiting for"
0 0 24 29 1 #"\n"
0 0 17 3 43 #"; the user to choose a song from the server"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 18 #"waiting-for-choice"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-7"
0 0 24 3 3 #") ("
0 0 14 3 5 #"above"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"PLEASE CHOOSE A SONG\""
0 0 24 3 1 #" "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Feedback: \""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #") "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"waiting-for-choice"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"PLEASE CHOOSE A SONG\""
0 0 24 3 1 #" "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Feedback: \""
0 0 24 3 2 #" ("
0 0 14 3 15 #"player-feedback"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #")) "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; draw-mpdata: MusicPlayer -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #"; creates an image that shows the feedback from the user, and the up"
 #"coming song's"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #"; title, artist, album, and history of songs played with # timesplay"
 #"ed for each of them"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-mpdata"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Feedback: \""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #") "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Up Next: \""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"yo\""
0 0 24 3 2 #") "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Artist: \""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"yo\""
0 0 24 3 2 #") "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Album: \""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 24 3 2 #") "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-mpdata"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Feedback: \""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"dislike\""
0 0 24 3 2 #") "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Up Next: \""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"BankAccount\""
0 0 24 3 2 #") "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Artist: \""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Savage\""
0 0 24 3 2 #") "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Album: \""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"issa\""
0 0 24 3 2 #") "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-mpdata"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Feedback: \""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"like\""
0 0 24 3 2 #") "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Up Next: \""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"BetterNow\""
0 0 24 3 2 #") "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Artist: \""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Posty\""
0 0 24 3 2 #") "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Album: \""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"bandb\""
0 0 24 3 2 #") "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-mpdata"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Feedback: \""
0 0 24 3 2 #" ("
0 0 14 3 15 #"player-feedback"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #")) "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Up Next: \""
0 0 24 3 2 #" ("
0 0 14 3 10 #"song-title"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-mpstate"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 4 #"))) "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Artist: \""
0 0 24 3 2 #" ("
0 0 14 3 11 #"song-artist"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-mpstate"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 4 #"))) "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Album: \""
0 0 24 3 2 #" ("
0 0 14 3 10 #"song-album"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-mpstate"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 4 #"))) "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; draw-songmenu : MP -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 55 #"; draws the song choices for the user to choose through"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #"; this function, put as local in draw-player to get exact MDM from m"
 #"p"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 13 #"draw-songmenu"
0 0 24 3 1 #" "
0 0 14 3 13 #"MUSICPLAYER-7"
0 0 24 3 2 #") "
0 6           4 21 6401
(
 #"(#(struct:overlay #(struct:translate 250.0 105.0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0.0009765"
 #"625 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:translate 5.0 7"
 #".5 #(struct:text \"B\" 0 1 \"orange\" 15 #f swiss normal normal #f))"
 #") #(struct:translate 10.0 0.0 #(struct:translate 4.0 7.5 #(struct:te"
 #"xt \"a\" 0 1 \"orange\" 15 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 18.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"n\" 0 1"
 #" \"orange\" 15 #f swiss normal normal #f))))) #(struct:translate 26."
 #"0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"k\" 0 1 \"orange\" "
 #"15 #f swiss normal normal #f))))) #(struct:translate 34.0 0.0 #(stru"
 #"ct:translate 5.0 7.5 #(struct:text \"A\" 0 1 \"orange\" 15 #f swiss "
 #"normal normal #f))))) #(struct:translate 44.0 0.0 #(struct:translate"
 #" 4.0 7.5 #(struct:text \"c\" 0 1 \"orange\" 15 #f swiss normal norma"
 #"l #f))))) #(struct:translate 52.0 0.0 #(struct:translate 4.0 7.5 #(s"
 #"truct:text \"c\" 0 1 \"orange\" 15 #f swiss normal normal #f))))) #("
 #"struct:translate 60.0 0.0 #(struct"
 #":translate 4.0 7.5 #(struct:text \"o\" 0 1 \"orange\" 15 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 68.0 0.0 #(struct:translate 4"
 #".0 7.5 #(struct:text \"u\" 0 1 \"orange\" 15 #f swiss normal normal "
 #"#f))))) #(struct:translate 76.0 0.0 #(struct:translate 4.0 7.5 #(str"
 #"uct:text \"n\" 0 1 \"orange\" 15 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 84.0 0.0 #(struct:translate 2.0 7.5 #(struct:text \"t"
 #"\" 0 1 \"orange\" 15 #f swiss normal normal #f))))) #(struct:transla"
 #"te 88.0 0.0 #(struct:translate 2.0 7.5 #(struct:text \" \" 0 1 \"ora"
 #"nge\" 15 #f swiss normal normal #f))))) #(struct:translate 92.0 0.0 "
 #"#(struct:translate 4.0 7.5 #(struct:text \"1\" 0 1 \"orange\" 15 #f "
 #"swiss normal normal #f))))) #(struct:translate 100.0 0 #(struct:tran"
 #"slate 0.0 15.0 #(struct:text \"\\n\" 0 1 \"orange\" 15 #f swiss norm"
 #"al normal #f))))) #(struct:translate 9.5 30.0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0.0009765625"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:translate 5.0 7.5 #(struct:text \"B\" 0 1 \"black\" 15 #f swiss no"
 #"rmal normal #f))) #(struct:translate 10.0 0.0 #(struct:translate 4.0"
 #" 7.5 #(struct:text \"e\" 0 1 \"black\" 15 #f swiss normal normal #f)"
 #")))) #(struct:translate 18.0 0.0 #(struct:translate 2.0 7.5 #(struct"
 #":text \"t\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct"
 #":translate 22.0 0.0 #(struct:translate 2.0 7.5 #(struct:text \"t\" 0"
 #" 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:translate 26"
 #".0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"e\" 0 1 \"black\" "
 #"15 #f swiss normal normal #f))))) #(struct:translate 34.0 0.0 #(stru"
 #"ct:translate 2.5 7.5 #(struct:text \"r\" 0 1 \"black\" 15 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 39.0 0.0 #(struct:translate "
 #"5.5 7.5 #(struct:text \"N\" 0 1 \"black\" 15 #f swiss normal normal "
 #"#f))))) #(struct:translate 50.0 0.0 #(struct:translate 4.0 7.5 #(str"
 #"uct:text \"o\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(str"
 #"uct:translate 58.0 0.0 #(struct:t"
 #"ranslate 5.5 7.5 #(struct:text \"w\" 0 1 \"black\" 15 #f swiss norma"
 #"l normal #f))))) #(struct:translate 69.0 0.0 #(struct:translate 2.0 "
 #"7.5 #(struct:text \" \" 0 1 \"black\" 15 #f swiss normal normal #f))"
 #"))) #(struct:translate 73.0 0.0 #(struct:translate 4.0 7.5 #(struct:"
 #"text \"2\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:"
 #"translate 81.0 0 #(struct:translate 0.0 15.0 #(struct:text \"\\n\" 0"
 #" 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:translate 16"
 #".5 30.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 0 0.0009765625 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:translate 4.0 7.5 #(struct:text \"8\" 0 1 \"black\" 15 #f sw"
 #"iss normal normal #f))) #(struct:translate 8.0 0.0 #(struct:translat"
 #"e 2.0 7.5 #(struct:text \"t\" 0 1 \"black\" 15 #f swiss normal norma"
 #"l #f))))) #(struct:translate 12.0 0.0 #(struct:translate 4.0 7.5 #(s"
 #"truct:text \"e\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(s"
 #"truct:translate 20.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \""
 #"e\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:transla"
 #"te 28.0 0.0 #(struct:translate 4.0 7.5 #(struct:text \"n\" 0 1 \"bla"
 #"ck\" 15 #f swiss normal normal #f))))) #(struct:translate 36.0 0.0 #"
 #"(struct:translate 2.0 7.5 #(struct:text \" \" 0 1 \"black\" 15 #f sw"
 #"iss normal normal #f))))) #(struct:translate 40.0 0.0 #(struct:trans"
 #"late 4.0 7.5 #(struct:text \"3\" 0 1 \"black\" 15 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 48.0 0 #(struct:translate 0.0 15.0 #"
 #"(struct:text \"\\n\" 0 1 \"black\" 15 #f swiss normal normal #f)))))"
 #" #(struct:translate 24.0 30.0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 "
 #"0 0 0)) 255 \"black\"))))))))) #(struct:translate 0 0 #(struct:crop "
 #"(#(struct:point 0 0) #(struct:point 600 0) #(struct:point 600 300) #"
 #"(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0) #(stru"
 #"ct:pulled-point 0 0 600 300 0 0) #(struct:pulled-point 0 0 0 300 0 0"
 #")) outline #(struct:pen \"black\" 2 solid round round)))) #(struct:t"
 #"ranslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0) #(struct:p"
 #"ulled-point 0 0 600 300 0 0) #(struct:pulled-point 0 0 0 300 0 0)) 2"
 #"55 \"white\")))))))) #(struct:bb 600.0 300.0 300.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"draw-songmenu"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"HIST-AS-LOS"
0 0 24 3 2 #" ("
0 0 14 3 12 #"history->los"
0 0 24 3 2 #" ("
0 0 14 3 14 #"player-history"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 33 #"; highlight-text: String -> Image"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 86
(
 #"; highlights the text of a choice in a list in orange if it matches "
 #"the string of the "
) 0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 68
#"; current index of the option, and keeps the text plain if it doesnt"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"highlight-text"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 11 #"HIST-AS-LOS"
0 0 24 3 2 #" ("
0 0 14 3 12 #"player-index"
0 0 24 3 1 #" "
0 0 14 3 2 #"mp"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #" "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 22 #"TEXT-COLOR-HIGHLIGHTED"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #" "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 5 #"foldr"
0 0 24 3 1 #" "
0 0 14 3 5 #"above"
0 0 24 3 1 #" "
0 0 14 3 11 #"empty-image"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 14 #"highlight-text"
0 0 24 3 1 #" "
0 0 14 3 11 #"HIST-AS-LOS"
0 0 24 3 3 #")) "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; history->los : History -> [List-of String]"
0 0 24 29 1 #"\n"
0 0 17 3 43 #"; converts a History into a list of strings"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"history->los"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"BankAccount 1\\n\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"history->los"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"BankAccount 1\\n\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"BetterNow 2\\n\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"history->los"
0 0 24 3 1 #" "
0 0 14 3 7 #"history"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 2 #" ["
0 0 17 3 34 #"; textify : SongHistory -> String "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 66
#"; turns a song history into a string, with a line break at the end"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 45 #"; given SONGHISTORY-1, return \"BankAccount 1\""
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 43 #"; given SONGHISTORY-2, return \"BetterNow 2\""
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 39 #"; given SONGHISTORY-3, return \"8teen 3\""
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"textify"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 10 #"song-title"
0 0 24 3 2 #" ("
0 0 14 3 16 #"songhistory-song"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 3 #")) "
0 0 19 3 3 #"\" \""
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 23 #"songhistory-timesplayed"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 3 #")) "
0 0 19 3 4 #"\"\\n\""
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 7 #"history"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 7 #"textify"
0 0 24 3 1 #" "
0 0 14 3 7 #"history"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; save-history : String History -> String"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; Write the list of numbers to the file"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"save-history"
0 0 24 3 1 #" "
0 0 14 3 5 #"fpath"
0 0 24 3 1 #" "
0 0 14 3 7 #"history"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"write-file"
0 0 24 3 1 #" "
0 0 14 3 5 #"fpath"
0 0 24 3 2 #" ("
0 0 14 3 15 #"history->string"
0 0 24 3 1 #" "
0 0 14 3 7 #"history"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; history->string : History -> String"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; converts the History to a storable CSV string"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"history->string"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-0"
0 0 24 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"history->string"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-1"
0 0 24 3 2 #") "
0 0 19 3 22 #"\"2929,BankAccount,1\\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"history->string"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-2"
0 0 24 3 2 #") "
0 0 19 3 40 #"\"8573,BetterNow,2\\n2929,BankAccount,1\\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"history->string"
0 0 24 3 1 #" "
0 0 14 3 9 #"HISTORY-3"
0 0 24 3 2 #") "
0 0 19 3 54
#"\"7163,8teen,3\\n8573,BetterNow,2\\n2929,BankAccount,1\\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"history->string"
0 0 24 3 1 #" "
0 0 14 3 7 #"history"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 2 #" ["
0 0 17 3 33 #"; sh-smasher : SongHistory String"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 55 #"; smashes the song history string and a string together"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 58
#"; given SONGHISTORY-1 and \" hi\", return \"BankAccount 1 hi\""
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"sh-smasher"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 1 #" "
0 0 14 3 6 #"string"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 19 #"songhistory->string"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 2 #") "
0 0 14 3 6 #"string"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"foldl"
0 0 24 3 1 #" "
0 0 14 3 10 #"sh-smasher"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 14 3 7 #"history"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; songhistory->string : SongHistory -> String"
0 0 24 29 1 #"\n"
0 0 17 3 56 #"; converts a single songhistory to a storable CSV string"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"songhistory->string"
0 0 24 3 1 #" "
0 0 14 3 13 #"SONGHISTORY-1"
0 0 24 3 2 #") "
0 0 19 3 22 #"\"2929,BankAccount,1\\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"songhistory->string"
0 0 24 3 1 #" "
0 0 14 3 13 #"SONGHISTORY-2"
0 0 24 3 2 #") "
0 0 19 3 20 #"\"8573,BetterNow,2\\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"songhistory->string"
0 0 24 3 1 #" "
0 0 14 3 13 #"SONGHISTORY-3"
0 0 24 3 2 #") "
0 0 19 3 16 #"\"7163,8teen,3\\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"songhistory->string"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 7 #"song-id"
0 0 24 3 2 #" ("
0 0 14 3 16 #"songhistory-song"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 4 #"))) "
0 0 19 3 3 #"\",\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 10 #"song-title"
0 0 24 3 2 #" ("
0 0 14 3 16 #"songhistory-song"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 3 #")) "
0 0 19 3 3 #"\",\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 23 #"songhistory-timesplayed"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 3 #")) "
0 0 19 3 4 #"\"\\n\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
